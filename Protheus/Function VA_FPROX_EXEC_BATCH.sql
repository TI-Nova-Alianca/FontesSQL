SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- Cooperativa Vinicola Nova Alianca Ltda
-- Calcula data e hora da proxima execucao de um processo batch.
-- Autor: Robert Koch
-- Data:  20/10/2015
-- Historico de alteracoes:
-- 22/10/2015 - Robert - Acrescenta tempo entre retentativas.
-- 30/12/2015 - Robert - Processos diarios (madrugada) que nao rodaram ontem desconsideravam horario de termino e executavam durante o dia.
-- 26/01/2016 - Robert - A partir da query inicial, popula variaveis de memoria, deixando de trabalhar com CTEs.
--                     - Quando extrapolava o horario de inicio, ficava sempre para amanha...e amanha jogava novamente 'para amanha'...
-- 18/12/2019 - Robert - Criado tratamento para filial 16.
-- 13/02/2022 - Robert - Desconsiderava o batch quando atingido maximo de tentativas (na vdd teve erros, mas continua pendente e precisa ser verificado) - GLPI 11619
--

ALTER FUNCTION [dbo].[VA_FPROX_EXEC_BATCH]
(
	@RECNO INT,
	@EMPRESA VARCHAR (2),
	@FILIAL VARCHAR (2)
)
RETURNS DATETIME
AS
BEGIN
	DECLARE @RET     AS DATETIME
	DECLARE @DIASEM  AS VARCHAR (7)
	DECLARE @INICIO  AS DATETIME
	DECLARE @ULTEXEC AS DATETIME
	DECLARE @REPETIR AS VARCHAR (1)
	DECLARE @ACADA   AS FLOAT
	DECLARE @ACADAU  AS VARCHAR (1)
	DECLARE @HRINI   AS VARCHAR (5)
	DECLARE @HRFIM   AS VARCHAR (5)
	;WITH CTE1 AS (
	SELECT
			ZZ6_ATIVO,
			ZZ6_RODADO,
			ZZ6_PERIOD,
			ZZ6_ACADA,
			ZZ6_ACADAU,
			ZZ6.ZZ6_QTTENT,
			ZZ6.ZZ6_MAXTEN,
			ZZ6.ZZ6_HRINI,
			ZZ6.ZZ6_HRFIM,
	--		CAST (ZZ6_DTINI + ' ' + ZZ6_HRINI AS DATETIME) AS INICIO,

			-- HORA DE INICIO: JAH TRAZ COM O ACRESCIMO DE TEMPO ENTRE RETENTATIVAS, QUANDO FOR O CASO.
			DATEADD (MINUTE, ZZ6_MINRET * ZZ6_QTTENT, CAST (ZZ6_DTINI + ' ' + ZZ6_HRINI AS DATETIME)) AS INICIO,

			-- DATA E HORA DA ULTIMA EXECUCAO: QUANDO REPETICAO DIARIA, ASSUME A HORA DE INICIO COMO HORA DA ULTIMA EXECUCAO, PARA QUE RODE SEMPRE NESSE MESMO HORARIO.
			CASE @FILIAL
			WHEN '01' THEN CAST(ZZ6_DUEF01 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF01 END AS DATETIME) 
			WHEN '03' THEN CAST(ZZ6_DUEF03 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF03 END AS DATETIME) 
			WHEN '04' THEN CAST(ZZ6_DUEF04 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF04 END AS DATETIME) 
			WHEN '05' THEN CAST(ZZ6_DUEF05 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF05 END AS DATETIME) 
			WHEN '06' THEN CAST(ZZ6_DUEF06 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF06 END AS DATETIME) 
			WHEN '07' THEN CAST(ZZ6_DUEF07 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF07 END AS DATETIME) 
			WHEN '08' THEN CAST(ZZ6_DUEF08 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF08 END AS DATETIME) 
			WHEN '09' THEN CAST(ZZ6_DUEF09 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF09 END AS DATETIME) 
			WHEN '10' THEN CAST(ZZ6_DUEF10 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF10 END AS DATETIME) 
			WHEN '11' THEN CAST(ZZ6_DUEF11 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF11 END AS DATETIME) 
			WHEN '12' THEN CAST(ZZ6_DUEF12 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF12 END AS DATETIME) 
			WHEN '13' THEN CAST(ZZ6_DUEF13 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF13 END AS DATETIME) 
			WHEN '14' THEN CAST(ZZ6_DUEF14 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF14 END AS DATETIME)
			WHEN '16' THEN CAST(ZZ6_DUEF16 + ' ' + CASE WHEN ZZ6_ACADAU = 'D' THEN ZZ6_HRINI ELSE ZZ6_HUEF16 END AS DATETIME) ELSE NULL END AS ULTEXEC
		FROM ZZ6010 ZZ6
		WHERE ZZ6.R_E_C_N_O_ = @RECNO
		AND ZZ6_ATIVO = 'S'
		AND ZZ6_DIASEM != ''
--		AND (ZZ6_PERIOD = 'R' OR (ZZ6_PERIOD = 'U' AND ZZ6_RODADO NOT IN ('S', 'C', 'E', 'K') AND ZZ6_QTTENT < ZZ6_MAXTEN))
		AND (ZZ6_PERIOD = 'R' OR (ZZ6_PERIOD = 'U' AND ZZ6_RODADO NOT IN ('S', 'C', 'E', 'K')))
		AND ZZ6_AGWF   != 'S'  -- SE ESTIVER AGUARDANDO LIBERACAO MANUAL (UMA ESPECIE DE WORKFLOW)
	)

	SELECT @INICIO  = INICIO,
		   @ULTEXEC = ULTEXEC,
		   @REPETIR = ZZ6_PERIOD,
		   @ACADA   = ZZ6_ACADA,
		   @ACADAU  = ZZ6_ACADAU,
		   @HRINI   = ZZ6_HRINI,
		   @HRFIM   = ZZ6_HRFIM
	FROM CTE1

	IF (@REPETIR = 'U')
		SET @RET = @INICIO
	ELSE BEGIN
		SET @RET = CASE @ACADAU
		           WHEN 'M' THEN DATEADD (MINUTE, @ACADA, @ULTEXEC)
		           WHEN 'H' THEN DATEADD (HOUR,   @ACADA, @ULTEXEC)
		           WHEN 'D' THEN DATEADD (DAY,    @ACADA, @ULTEXEC)
		           ELSE @ULTEXEC
				   END
	END

	-- SE EXTRAPOLAR A HORA LIMITE DE TERMINO, AVANCA PARA O PROXIMO DIA
	IF (SUBSTRING (CONVERT (VARCHAR (8), @RET, 14), 1, 5) > @HRFIM OR SUBSTRING (CONVERT (VARCHAR (8), GETDATE(), 14), 1, 5) > @HRFIM)
		IF (@ACADAU = 'D')
			SET @RET = CAST (CONVERT (VARCHAR (8), DATEADD (DAY, DATEDIFF (DAY, @RET, GETDATE ()) + 1, @RET), 112) + ' ' + @HRINI AS DATETIME)
		ELSE
			SET @RET = CAST (CONVERT (VARCHAR (8), DATEADD (DAY, DATEDIFF (DAY, @RET, @ULTEXEC) + 1, @RET), 112) + ' ' + @HRINI AS DATETIME)


	-- AVANCA DIAS ATEH FICAR DE ACORDO COM DIA DA SEMANA DESEJADO.
	SELECT @DIASEM = (SELECT ZZ6_DIASEM FROM ZZ6010 WHERE R_E_C_N_O_ = @RECNO)
	IF (@DIASEM != '')
		while (CHARINDEX (CAST (DATEPART (DW, @RET) AS VARCHAR (1)), @DIASEM) = 0)
			SET @RET = DATEADD (DAY, 1, @RET)

	RETURN @RET
END
GO
