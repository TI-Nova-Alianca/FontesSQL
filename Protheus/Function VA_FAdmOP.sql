SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- Descricao: Retorna tabela comparativa entre componentes da estrutura e os
--            realmente utilizados em ordens de producao / manutencao.
--            Recebeu este nome por que baseia-se na tela 'Administrar OP'
-- Autor....: Robert Koch
-- Data.....: 29/05/2022
--
-- Historico de alteracoes:
--

ALTER FUNCTION [dbo].[VA_FAdmOP]
-- PARAMETROS DE CHAMADA
(
	 @FILINI  VARCHAR (2)
	,@FILFIM  VARCHAR (2)
	,@DATAINI VARCHAR (8)
	,@DATAFIM VARCHAR (8)
	,@OPINI   VARCHAR (14)
	,@OPFIM   VARCHAR (14)
)
RETURNS TABLE
AS
	RETURN 

	-- 12429101006 -- terceirizacao
	-- 22013000001 -- perda
	-- 11925201001 -- troca de material
	-- 12247201001 -- BASTANTES COMPONENTES
	-- 11285101001 -- REQ.MANUAL, PERDAS
	-- 11962101001 -- REQ.AUT.NEGATIVA, PERDAS
	-- 12285901001 -- reprocesso, req.manuais e perdas

	-- MONTA UMA CTE COM A LISTA DE FILIAIS E NUMEROS DE OP A SEREM CONSIDERADAS.
	WITH PRE_LISTA_DE_OP AS
	(
		SELECT C2_FILIAL AS FILIAL
			, C2_NUM + SC2.C2_ITEM + SC2.C2_SEQUEN + SC2.C2_ITEMGRD AS OP
		FROM SC2010 SC2
		WHERE SC2.D_E_L_E_T_ = ''
		AND SC2.C2_FILIAL BETWEEN @FILINI AND @FILFIM
		AND C2_NUM + SC2.C2_ITEM + SC2.C2_SEQUEN + SC2.C2_ITEMGRD BETWEEN @OPINI AND @OPFIM
	
		-- BUSCA O MAIOR/MENOR VALOR ENTRE DUAS DATAS. ROYALTIES PARA https://stackoverflow.com/questions/124417/is-there-a-max-function-in-sql-server-that-takes-two-values-like-math-max-in-ne
		AND (SELECT MAX (DIA) FROM (VALUES (SC2.C2_EMISSAO), (SC2.C2_DATPRI)) AS UM_NOME_DE_TABELA_QUALQUER (DIA)) >= @DATAINI
		AND (SELECT MIN (DIA) FROM (VALUES (SC2.C2_DATPRF), (SC2.C2_DATRF)) AS UM_NOME_DE_TABELA_QUALQUER (DIA)) <= @DATAFIM

		UNION

		-- COMO A FUNCAO PODE RECEBER SOMENTE PARAMETROS DE INTERVALO DE DATAS
		-- CONSIDERANDO OP INICIAL = '' E FINAL = 'Z', EU PRECISO LER O SD3
		-- PARA VER QUE OPs FORAM MOVIMENTADAS.
		SELECT DISTINCT D3_FILIAL
			, D3_OP
		FROM SD3010 SD3
		WHERE SD3.D_E_L_E_T_ = ''
		AND SD3.D3_OP != ''
		AND SD3.D3_OP BETWEEN @OPINI AND @OPFIM
		AND SD3.D3_EMISSAO BETWEEN @DATAINI AND @DATAFIM
	)
	
	-- NOVA CTE COM MAIS DADOS A RESPEITO DE CADA OP. ACHEI QUE FICOU MAIS
	-- CLARO PARA LER E MAIS PERFORMATICO GERANDO NUMA NOVA CTE, EM VEZ DE
	-- ENVOLVER AS TABELAS SC2 E SB1 MAS DUAS QUERIES DA PRIMEIRA CTE.
	, LISTA_DE_OP AS
	(
		SELECT PRE_LISTA_DE_OP.*
			, CASE SB1.B1_QB WHEN 0
				THEN 1
				ELSE SB1.B1_QB
				END AS QTBASE
			, SC2.C2_PRODUTO
			, C2_VALINEN
			, SC2.C2_DATPRI
			, SC2.C2_REVISAO
			, SC2.C2_QUJE
			, SC2.C2_PERDA
		FROM PRE_LISTA_DE_OP
			, SC2010 SC2
			, SB1010 SB1
		WHERE SC2.D_E_L_E_T_ = ''
		AND SC2.C2_FILIAL  = PRE_LISTA_DE_OP.FILIAL
		AND SC2.C2_NUM     = SUBSTRING (PRE_LISTA_DE_OP.OP, 1, 6)
		AND SC2.C2_ITEM    = SUBSTRING (PRE_LISTA_DE_OP.OP, 7, 2)
		AND SC2.C2_SEQUEN  = SUBSTRING (PRE_LISTA_DE_OP.OP, 9, 3)
		AND SC2.C2_ITEMGRD = SUBSTRING (PRE_LISTA_DE_OP.OP, 12, 2)
		AND SB1.D_E_L_E_T_ = ''
		AND SB1.B1_FILIAL  = '  '
		AND SB1.B1_COD     = SC2.C2_PRODUTO
	)
	--SELECT * FROM LISTA_DE_OP

	-- GERA UMA CTE COM TODAS AS MOVIMENTACOES DAS OPs SELECIONADAS.
	, MOVTOS AS
	(
		SELECT SD3.D3_FILIAL
			, SD3.D3_OP
			, SD3.D3_COD
			, B1_DESC
			, B1_UM
			, LISTA_DE_OP.C2_VALINEN
			, LISTA_DE_OP.C2_REVISAO
			, SUM (CASE WHEN D3_CF IN ('PR0', 'PR1') THEN SD3.D3_QUANT ELSE 0 END) AS PRODUCAO_QT
			, SUM (CASE WHEN D3_CF IN ('PR0', 'PR1') THEN SD3.D3_CUSTO1 ELSE 0 END) AS PRODUCAO_VL
			, SUM (CASE WHEN SD3.D3_VAPEROP != 'S' AND D3_CF IN ('RE1', 'RE2', 'RE5', 'RE9') THEN SD3.D3_QUANT  ELSE 0 END + CASE WHEN D3_CF IN ('DE1', 'DE2', 'DE5', 'DE9') THEN SD3.D3_QUANT  * -1 ELSE 0 END) AS REQAUT_QT
			, SUM (CASE WHEN SD3.D3_VAPEROP != 'S' AND D3_CF IN ('RE1', 'RE2', 'RE5', 'RE9') THEN SD3.D3_CUSTO1 ELSE 0 END + CASE WHEN D3_CF IN ('DE1', 'DE2', 'DE5', 'DE9') THEN SD3.D3_CUSTO1 * -1 ELSE 0 END) AS REQAUT_VL
			, SUM (CASE WHEN SD3.D3_VAPEROP != 'S' AND D3_CF IN ('RE0', 'RE3', 'RE6') THEN SD3.D3_QUANT  ELSE 0 END + CASE WHEN SD3.D3_VAPEROP != 'S' AND D3_CF IN ('DE0', 'DE3', 'DE6') THEN SD3.D3_QUANT  * -1 ELSE 0 END) AS REQMAN_QT
			, SUM (CASE WHEN SD3.D3_VAPEROP != 'S' AND D3_CF IN ('RE0', 'RE3', 'RE6') THEN SD3.D3_CUSTO1 ELSE 0 END + CASE WHEN SD3.D3_VAPEROP != 'S' AND D3_CF IN ('DE0', 'DE3', 'DE6') THEN SD3.D3_CUSTO1 * -1 ELSE 0 END) AS REQMAN_VL
			, SUM (CASE WHEN SD3.D3_VAPEROP  = 'S' THEN SD3.D3_QUANT  ELSE 0 END) AS PERDA_QT
			, SUM (CASE WHEN SD3.D3_VAPEROP  = 'S' THEN SD3.D3_CUSTO1 ELSE 0 END) AS PERDA_VL
		FROM LISTA_DE_OP
			, SD3010 SD3
			, SB1010 SB1
		WHERE SD3.D_E_L_E_T_ != '*' 
		AND SD3.D3_ESTORNO   != 'S'
		AND SD3.D3_FILIAL     = LISTA_DE_OP.FILIAL
		AND SD3.D3_OP         = LISTA_DE_OP.OP
		and SB1.D_E_L_E_T_   != '*' 
		AND SB1.B1_FILIAL     = '  '
		AND SB1.B1_COD        = SD3.D3_COD
		GROUP BY SD3.D3_FILIAL
			, SD3.D3_OP
			, LISTA_DE_OP.C2_VALINEN
			, LISTA_DE_OP.C2_REVISAO
			, SD3.D3_COD
			, SB1.B1_DESC
			, B1_UM
	)

	-- GERA UMA CTE COM TODOS OS COMPONENTES DA ESTRUTURA DE CADA OP
	, ESTRUT AS
	(
		SELECT FILIAL
			, OP
			, C2_PRODUTO
			, C2_VALINEN
			, C2_REVISAO
			, G1_COMP
			, SB1_COMP.B1_DESC
			, SB1_COMP.B1_UM
			, SUM (CASE SG1.G1_FIXVAR WHEN 'V'
					THEN SG1.G1_QUANT / QTBASE + SG1.G1_QUANT * SG1.G1_PERDA / 100
					ELSE SG1.G1_QUANT + SG1.G1_QUANT * SG1.G1_PERDA / 100
				END)
				* (LISTA_DE_OP.C2_QUJE + LISTA_DE_OP.C2_PERDA)
				AS QT_ESTRU
		FROM LISTA_DE_OP
			, SG1010 SG1
			, SB1010 SB1_COMP
		WHERE SB1_COMP.D_E_L_E_T_ = '' 
		AND SB1_COMP.B1_FILIAL    = '  ' 
		AND SB1_COMP.B1_COD       = SG1.G1_COMP
		AND SB1_COMP.B1_FANTASM  != 'S'
		AND SG1.D_E_L_E_T_        = '' 
		AND SG1.G1_FILIAL         = '  '
		AND SG1.G1_COD            = LISTA_DE_OP.C2_PRODUTO
		AND SG1.G1_INI           <= LISTA_DE_OP.C2_DATPRI
		AND SG1.G1_FIM           >= LISTA_DE_OP.C2_DATPRI
		AND SG1.G1_REVINI        <= LISTA_DE_OP.C2_REVISAO
		AND SG1.G1_REVFIM        >= LISTA_DE_OP.C2_REVISAO
		GROUP BY LISTA_DE_OP.FILIAL
			, LISTA_DE_OP.OP
			, LISTA_DE_OP.C2_PRODUTO
			, LISTA_DE_OP.C2_VALINEN
			, LISTA_DE_OP.C2_REVISAO
			, LISTA_DE_OP.C2_QUJE
			, LISTA_DE_OP.C2_PERDA
			, SG1.G1_COMP
			, SG1.G1_QUANT
			, SG1.G1_PERDA
			, SB1_COMP.B1_DESC
			, SB1_COMP.B1_UM
	)

	-- GERA UMA CTE JUNTANDO MOVIMENTOS REALIZADOS COM COMPONENTES PREVISTOS
	-- NA ESTRUTURA DO PRODUTO DE CADA OP, PARA PODER COMPARAR VARIACOES DE
	-- QUANTIDADES E USO DE COMPONENTES NAO PREVISTOS.
	, ACUMULADO AS
	(
		SELECT ISNULL (MOVTOS.D3_FILIAL, ESTRUT.FILIAL) AS FILIAL
			, ISNULL (MOVTOS.D3_OP, ESTRUT.OP) AS OP
			, ISNULL (ESTRUT.C2_VALINEN, MOVTOS.C2_VALINEN) AS LINHA_ENVASE
			, ISNULL (ESTRUT.C2_REVISAO, MOVTOS.C2_REVISAO) AS REVISAO_ESTRUT
			, ISNULL (MOVTOS.D3_COD, ESTRUT.G1_COMP) AS COMP
			, ISNULL (MOVTOS.B1_DESC, ESTRUT.B1_DESC) AS DESCR_COMP
			, ISNULL (MOVTOS.PRODUCAO_QT, 0) AS PRODUCAO_QT
			, ISNULL (MOVTOS.REQAUT_QT, 0) AS REQAUT_QT
			, ISNULL (MOVTOS.REQMAN_QT, 0) AS REQMAN_QT
			, ISNULL (MOVTOS.PERDA_QT, 0) AS PERDA_QT
			, ISNULL (ESTRUT.QT_ESTRU, 0) AS QT_ESTRU
			, ISNULL (MOVTOS.B1_UM, ESTRUT.B1_UM) AS UM_COMP
			, ISNULL (MOVTOS.PRODUCAO_VL, 0) AS PRODUCAO_VL
			, ISNULL (MOVTOS.REQAUT_VL, 0) AS REQAUT_VL
			, ISNULL (MOVTOS.REQMAN_VL, 0) AS REQMAN_VL
			, ISNULL (MOVTOS.PERDA_VL, 0) AS PERDA_VL
	FROM MOVTOS
		FULL OUTER JOIN ESTRUT
			ON (ESTRUT.FILIAL  = MOVTOS.D3_FILIAL
			AND ESTRUT.OP      = MOVTOS.D3_OP
			AND ESTRUT.G1_COMP = MOVTOS.D3_COD)
	)
	
	-- SELECT FINAL NA ULTIMA CTE GERADA, COM ADICAO DE MAIS ALGUNS CAMPOS.
	SELECT ACUMULADO.FILIAL
		, ACUMULADO.OP
		, ACUMULADO.COMP
		, ACUMULADO.DESCR_COMP
		, ACUMULADO.UM_COMP
		, ACUMULADO.REQAUT_QT
		, ACUMULADO.REQMAN_QT
		, ACUMULADO.PERDA_QT
		, REQAUT_QT + REQMAN_QT + PERDA_QT AS CONSUMO_TOTAL
		, ROUND (ACUMULADO.QT_ESTRU, 4) as QT_ESTRU
		, ROUND (REQAUT_QT + REQMAN_QT + PERDA_QT - QT_ESTRU, 4) AS VARIACAO_QT
		, ACUMULADO.PRODUCAO_QT
		, ACUMULADO.REVISAO_ESTRUT
		, ISNULL (RTRIM (ACUMULADO.LINHA_ENVASE) + ' - ' + RTRIM (SH1.H1_DESCRI), '') AS LINHA_ENVASE
		, ACUMULADO.REQAUT_VL
		, ACUMULADO.REQMAN_VL
		, ACUMULADO.PERDA_VL
		, ACUMULADO.PRODUCAO_VL
	FROM ACUMULADO
		LEFT JOIN SH1010 SH1
			ON (SH1.D_E_L_E_T_ = ''
			AND SH1.H1_FILIAL  = '  '
			AND SH1.H1_CODIGO  = ACUMULADO.LINHA_ENVASE)

GO
