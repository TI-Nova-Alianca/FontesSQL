SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Cooperativa Nova Alianca
-- Procedure para ajuste em tabelas do imobilizado em que, durante certo periodo, alguns campos ficaram em branco (GLPI 10239)
-- TIVEMOS CASOS EM QUE TINHA TRAVAMENTO DO PROGRAMA DE CALCULO DA DEPRECIACAO. PARA ESSES CASOS FOI CRIADO UM BACA QUE LIMPAVA
-- A TABELA SN4, MAS NAO SABIAMOS QUE ERA NECESSARIO LIMPAR TAMBEM DA SN3, ENTAO O SALDO FOI FICANDO ERRADO NA SN3.
-- AGORA ESTAMOS PARTINDO DO VALOR DE AQUISICAO, SOMANDO TODAS AS DEPRECIACOES DO SN4 E AJUSTANDO O VALOR ACUMULADO DE
-- DEPRECIACAO TANTO NOS REGISTROS DE TRANF. ENTRE FILIAIS (NO SN4) COMO OS DO SN3
-- AUTOR: ROBERT KOCH
-- VERSAO INICIAL: 08/2019
-- 04/11/2019 - TRATAMENTO PARA NAO ATUALIZAR SN4 QUANDO TRANSF.DE CC (VALIDA PELP IDMOV)
-- 08/11/2019 - DESCONSIDERA QUANDO TEVE TRANSFERENCIA ENTRE CONTAS (SEM TRATAMENTO)
-- Autor: Robert Koch
-- Data: 14/07/2021
--
-- Historico de alteracoes:
--

ALTER PROCEDURE [dbo].[SP_AJUSTA_DEPR_SN3_SN4]
(
	@CBASE VARCHAR (10),
	@ITEM VARCHAR (4)
) AS
BEGIN
	-- BUSCA FILIAL ONDE TEVE A PRIMEIRA AQUISICAO
	DECLARE @TIPO VARCHAR (2)
	DECLARE @MSGERRO VARCHAR (MAX);
	
	SET NOCOUNT ON

	-- CRIA TABELA TEMPORARIA PARA RETORNAR MENSAGENS PARA O PROTHEUS
	CREATE TABLE #RET (
		TIPO VARCHAR (4),
		MSG varchar (250))
	INSERT INTO #RET (TIPO, MSG) VALUES ('Info', 'INICIANDO PROCESSAMENTO DO COD.BASE/ITEM ' + @CBASE + '/' + @ITEM)

	-- LOOP PARA PROCESSAR OS 4 TIPOS DE SALDO
	DECLARE @CONTADOR_DE_TIPOS INT = 1;
	WHILE (@CONTADOR_DE_TIPOS <= 4)
	BEGIN

		SET @TIPO = CASE @CONTADOR_DE_TIPOS WHEN 1 THEN '01' WHEN 2 THEN '10' WHEN 3 THEN '02' WHEN 4 THEN '12' END
		INSERT INTO #RET (TIPO, MSG) VALUES ('Info',  'INICIANDO TIPO ' + @TIPO)

		-- SE O ITEM TEVE TRANSFERENCIA DE UMA CONTA PARA OUTRA, ABORTA (NAO TENHO TRATAMENTO PRONTO PARA ESSES CASOS)
		SET @MSGERRO = (SELECT TOP 1 'ENCONTREI TRANSFERENCIA ENTRE CONTAS NA FILIAL ' + N4_FILIAL + ' EM ' + N4_DATA + '. ATUALIZACAO CANCELADA PARA ESTE TIPO.'
			FROM SN4010 ORIG
			WHERE D_E_L_E_T_ = '' AND N4_CBASE = @CBASE AND ORIG.N4_ITEM = @ITEM
			AND ORIG.N4_TIPO = @TIPO
			AND ORIG.N4_TIPOCNT != '3'
			AND N4_OCORR IN ('03') -- SAIDA
			AND EXISTS (SELECT * FROM SN4010 DEST
						WHERE DEST.D_E_L_E_T_ = '' 
						AND DEST.N4_FILIAL  = ORIG.N4_FILIAL
						AND DEST.N4_CBASE   = ORIG.N4_CBASE
						AND DEST.N4_ITEM    = ORIG.N4_ITEM
						AND DEST.N4_TIPO    = ORIG.N4_TIPO
						AND DEST.N4_CONTA  != ORIG.N4_CONTA
						AND DEST.N4_IDMOV   = ORIG.N4_IDMOV
						AND DEST.N4_TIPOCNT = ORIG.N4_TIPOCNT
						AND DEST.N4_OCORR   = '04')) -- 04=ENTRADA
		IF (@MSGERRO IS NOT NULL)
			BEGIN
				INSERT INTO #RET (TIPO, MSG) VALUES ('ERRO', @MSGERRO)
				BREAK
			END
		ELSE
		BEGIN

			DECLARE @FILIAL_ORIGINAL VARCHAR (2) = (SELECT SN1.N1_FILIAL--, SN1.N1_CBASE, SN1.N1_ITEM, SN1.N1_DESCRIC, SN4.*
													FROM SN4010 SN4, SN1010 SN1
													WHERE SN1.D_E_L_E_T_ = ''
													AND SN1.N1_CBASE = @CBASE
													AND SN1.N1_ITEM = @ITEM
													AND SN4.D_E_L_E_T_ = ''
													AND SN4.N4_FILIAL = SN1.N1_FILIAL
													AND SN4.N4_CBASE = SN1.N1_CBASE
													AND SN4.N4_ITEM = SN1.N1_ITEM
													AND SN4.N4_TIPO = @TIPO
													AND SN4.N4_OCORR = '05')
			INSERT INTO #RET (TIPO, MSG) VALUES ('Info',  'FILIAL ORIGINAL: ' + ISNULL (@FILIAL_ORIGINAL, ''))

			DECLARE @VALOR_AQUISICAO FLOAT = (SELECT N4_VLROC1
													FROM SN4010 SN4, SN1010 SN1
													WHERE SN1.D_E_L_E_T_ = ''
													AND SN1.N1_CBASE = @CBASE
													AND SN1.N1_ITEM = @ITEM
													AND SN4.D_E_L_E_T_ = ''
													AND SN4.N4_FILIAL = SN1.N1_FILIAL
													AND SN4.N4_CBASE = SN1.N1_CBASE
													AND SN4.N4_ITEM = SN1.N1_ITEM
													AND SN4.N4_TIPO = @TIPO
													AND SN4.N4_OCORR = '05')
			INSERT INTO #RET (TIPO, MSG) VALUES ('Info',  'VALOR DE AQUISICAO: ' + ISNULL (FORMAT (@VALOR_AQUISICAO, 'G'), ''))

			DECLARE @CTA_DEPREC VARCHAR (20) = (SELECT DISTINCT N3_CCDEPR FROM SN3010 SN3 WHERE SN3.D_E_L_E_T_ = ''
													AND SN3.N3_CBASE = @CBASE
													AND SN3.N3_ITEM = @ITEM
													AND SN3.N3_TIPO = @TIPO)
			INSERT INTO #RET (TIPO, MSG) VALUES ('Info', 'CTA DEPRECIACAO: ' + ISNULL (@CTA_DEPREC, ''))


			-- LOOP EM TODAS AS SAIDAS POR TRANSFERENCIA DO ITEM
			WHILE (0=0)
			BEGIN
				INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '   INICIANDO LOOP COM FILIAL ORIGEM = ' + ISNULL (@FILIAL_ORIGINAL, ''))

				-- SOMA DEPRECIACOES NESTA FILIAL
				DECLARE @SALDO_FINAL FLOAT = ROUND ((SELECT SUM (SN4.N4_VLROC1)
				FROM SN4010 SN4
				WHERE SN4.D_E_L_E_T_ = ''
				AND SN4.N4_CBASE = @CBASE
				AND SN4.N4_ITEM = @ITEM
				AND SN4.N4_FILIAL = @FILIAL_ORIGINAL
				AND SN4.N4_TIPO = @TIPO
				AND SN4.N4_CONTA = @CTA_DEPREC
				AND SN4.N4_OCORR in ('04', CASE WHEN @TIPO IN ('01', '02') THEN '06' ELSE '20' END)), 2)

				IF (@SALDO_FINAL IS NULL)
				BEGIN
					INSERT INTO #RET (TIPO, MSG) VALUES ('ERRO', '      NAO CONSEGUI LER SALDO FINAL DA DEPRECIACAO NESTA FILIAL.')
					BREAK
				END

				INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '      SOMA DAS DEPRECIACOES ENCONTRADAS NA FILIAL ' + ISNULL (@FILIAL_ORIGINAL, '') + ': ' + ISNULL (FORMAT (@SALDO_FINAL, 'G'), ''))

				DECLARE @VLR_ANTERIOR FLOAT = (SELECT N3_VRDACM1
												FROM SN3010
												WHERE D_E_L_E_T_ = ''
												AND N3_FILIAL = @FILIAL_ORIGINAL
												AND N3_CBASE = @CBASE
												AND N3_ITEM = @ITEM
												AND N3_TIPO = @TIPO)
				INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '      AJUSTANDO NO SN3 A DEPRECIACAO ACUMULADA (FILIAL ' + ISNULL (@FILIAL_ORIGINAL, '') + ') DE ' + ISNULL (FORMAT (@VLR_ANTERIOR, 'G'), '') + ' PARA ' + ISNULL (FORMAT (@SALDO_FINAL, 'G'), ''))
				UPDATE SN3010 SET N3_VRDACM1 = @SALDO_FINAL
				WHERE D_E_L_E_T_ = ''
				AND N3_FILIAL = @FILIAL_ORIGINAL
				AND N3_CBASE = @CBASE
				AND N3_ITEM = @ITEM
				AND N3_TIPO = @TIPO

			
				-- TRATAMENTO PARA TRANSFERENCIAS
				-- ENCONTRA O IDMOV DA SAIDA
				DECLARE @IDMOV_SAIDA VARCHAR (10) = (SELECT DISTINCT SN4.N4_IDMOV FROM SN4010 SN4
													WHERE D_E_L_E_T_ = ''
													AND N4_CBASE = @CBASE
													AND N4_ITEM = @ITEM
													AND N4_FILIAL = @FILIAL_ORIGINAL
													AND N4_TIPO = @TIPO
													AND N4_CONTA = @CTA_DEPREC
													AND N4_OCORR IN ('01', '03')
													AND N4_FILORIG != '')
				--INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '      IDMOV DA TRANSF PARA OUTRA FILIAL: ' + ISNULL (@IDMOV_SAIDA, ''))
				IF (@IDMOV_SAIDA IS NULL)
				BEGIN
					INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '      NAO ENCONTREI TRANSF PARA OUTRA FILIAL. VOU PARAR DE PROCESSAR TRANSFERENCIAS DESTE BEM.')
					INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '      VOU VERIFICAR SE TEM BAIXAS')
					/*
					DECLARE @IDMOV_BAIXA VARCHAR (10) = (SELECT DISTINCT SN4.N4_IDMOV FROM SN4010 SN4
														WHERE D_E_L_E_T_ = ''
														AND N4_CBASE  = @CBASE
														AND N4_ITEM   = @ITEM
														AND N4_FILIAL = @FILIAL_ORIGINAL
														AND N4_TIPO   = @TIPO
														AND N4_CONTA  = @CTA_DEPREC
														AND N4_OCORR  IN ('01')
														AND N4_FILORIG = '')
					INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '      IDMOV DA BAIXA: ' + ISNULL (@IDMOV_BAIXA, ''))*/
					SET @VLR_ANTERIOR = (SELECT DISTINCT N4_VLROC1
													FROM SN4010 SN4
														WHERE D_E_L_E_T_ = ''
														AND N4_CBASE  = @CBASE
														AND N4_ITEM   = @ITEM
														AND N4_FILIAL = @FILIAL_ORIGINAL
														AND N4_TIPO   = @TIPO
														AND N4_CONTA  = @CTA_DEPREC
														AND N4_OCORR  IN ('01')
														AND N4_FILORIG = '')
					IF (@VLR_ANTERIOR IS NOT NULL)
					BEGIN
						INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '      AJUSTANDO NO SN4 O VALOR DA BAIXA (FILIAL ' + ISNULL (@FILIAL_ORIGINAL, '') + ') DE ' + ISNULL (FORMAT (@VLR_ANTERIOR, 'G'), '') + ' PARA ' + ISNULL (FORMAT (@SALDO_FINAL, 'G'), ''))
						UPDATE SN4010 SET N4_VLROC1 = @SALDO_FINAL
							WHERE D_E_L_E_T_ = ''
							AND N4_CBASE  = @CBASE
							AND N4_ITEM   = @ITEM
							AND N4_FILIAL = @FILIAL_ORIGINAL
							AND N4_TIPO   = @TIPO
							AND N4_CONTA  = @CTA_DEPREC
							AND N4_OCORR  IN ('01')
							AND N4_FILORIG = ''
					END
					INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '      FINALIZEI O TRATAMENTO PARA ESTE BEM/TIPO')
					INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '')
					BREAK
				END


				DECLARE @SALDO_EXISTENTE FLOAT = (SELECT AVG (SN4.N4_VLROC1)
				FROM SN4010 SN4
				WHERE SN4.D_E_L_E_T_ = ''
				AND SN4.N4_CBASE = @CBASE
				AND SN4.N4_ITEM = @ITEM
				AND SN4.N4_FILIAL = @FILIAL_ORIGINAL
				AND SN4.N4_TIPO = @TIPO
				AND SN4.N4_CONTA = @CTA_DEPREC
				AND SN4.N4_OCORR IN ('01', '03'))
				INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '      SALDO DE DEPRECIACOES EXISTENTE: ' + FORMAT (ISNULL (@SALDO_EXISTENTE, 0), 'G'))

				IF (@SALDO_FINAL > @VALOR_AQUISICAO)
				BEGIN
					INSERT INTO #RET (TIPO, MSG) VALUES ('ERRO', '      ENCONTREI DEPRECIACAO MAIOR QUE VALOR DE AQUISICAO. ABORTANDO.')
					BREAK
				END
	
				INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '      AJUSTANDO NO SN4 O VALOR DA SAIDA DA FILIAL ' + ISNULL (@FILIAL_ORIGINAL, '') + ' PARA ' + ISNULL (FORMAT (@SALDO_FINAL, 'G'), ''))
				UPDATE SN4010 SET N4_VLROC1 = @SALDO_FINAL
				WHERE D_E_L_E_T_ = ''
				AND N4_CBASE = @CBASE
				AND N4_ITEM = @ITEM
				AND N4_FILIAL = @FILIAL_ORIGINAL
				AND N4_TIPO = @TIPO
				AND N4_CONTA = @CTA_DEPREC
				AND (N4_OCORR = '01' OR (N4_OCORR = '03' AND N4_IDMOV = @IDMOV_SAIDA))  -- APENAS A OCOR.03 RECEBE O IDMOV POR QUE FAZ 'PAR' COM A 04


				-- ENCONTRA A FILIAL PARA ONDE FOI TRANSFERIDO AMARRANDO PELO IDMOV
				DECLARE @FIL_DEST VARCHAR (2) = (SELECT N4_FILIAL FROM SN4010 SN4
												WHERE D_E_L_E_T_ = ''
												AND N4_CBASE = @CBASE
												AND N4_ITEM = @ITEM
												AND N4_FILIAL != @FILIAL_ORIGINAL
												AND N4_FILORIG = @FILIAL_ORIGINAL
												AND N4_TIPO = @TIPO
												AND N4_CONTA = @CTA_DEPREC
												AND N4_OCORR = '04'  -- ENTRADA DE TRANSFERENCIA
												AND N4_IDMOV = @IDMOV_SAIDA)
				INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '      FILIAL DESTINO: ' + ISNULL (@FIL_DEST, ''))

				INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '      ATUALIZANDO NO SN4 O VALOR DE ENTRADA NA FILIAL ' + ISNULL (@FIL_DEST, '') + ' PARA ' + ISNULL (FORMAT (@SALDO_FINAL, 'G'), ''))
				--SELECT * FROM SN4010 SN4
				UPDATE SN4010 SET N4_VLROC1 = @SALDO_FINAL
				WHERE D_E_L_E_T_ = ''
				AND N4_CBASE = @CBASE
				AND N4_ITEM = @ITEM
				AND N4_FILIAL = @FIL_DEST
				AND N4_FILORIG = @FILIAL_ORIGINAL
				AND N4_TIPO = @TIPO
				AND N4_CONTA = @CTA_DEPREC
				AND N4_OCORR = '04'  -- ENTRADA DE TRANSFERENCIA
				AND N4_IDMOV = @IDMOV_SAIDA

				-- FILIAL ORIGEM ASSUME O VALOR DA FILIAL DESTINO PARA QUE, NO PROXIMO LOOP, POSSA ENCONTRAR NOVA TRANSFERENCIA
				SET @FILIAL_ORIGINAL =  @FIL_DEST

			END
		END
		INSERT INTO #RET (TIPO, MSG) VALUES ('Info', '')

		SET @CONTADOR_DE_TIPOS += 1
	END
	INSERT INTO #RET (TIPO, MSG) VALUES ('Info', 'PROCESSO FINALIZADO')

	-- A FORMA QUE CONSEGUI RETORNAR DADOS PARA O PROTHEUS FOI ESTA.
	SELECT * FROM #RET
	DROP TABLE #RET
END
GO
