USE [BI_ALIANCA]
GO
/****** Object:  StoredProcedure [dbo].[SP_DRE_INDL_GERA_DADOS]    Script Date: 14/12/2021 13:59:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--
-- Descricao: Gera dados iniciais (vendas) para consulta de DRE industrial
-- Autor....: Robert Koch
-- Data.....: julho/2019
--
-- Historico de alteracoes:
-- 18/08/2019 - Robert - Passa a trabalhar com 'ID de analise' para permitir usar a mesma tabela para dados de diferentes analises.
--                     - Acrescentada coluna TAB_PRC_LOJA
-- 24/09/2019 - Robert - Gravacao campos cliente e loja base.
-- 04/03/2020 - Robert - Removidas linhas comentariadas.
-- 05/03/2020 - Robert - Tratamento para a linha de envase 013 (em terceiros)
-- 09/03/2020 - Robert - Passa a gravar o item da nota (ITEMNF)
-- 30/03/2020 - Robert - Criada coluna VERBAS_RATEIO
-- 09/12/2020 - Robert - Function VA_DatetimeToVarchar trocada pela FORMAT (nativa do SQL).
--

ALTER PROCEDURE [dbo].[SP_DRE_INDL_GERA_DADOS]
(
	@IN_ID_ANALISE INT
) AS
BEGIN
 	
	DECLARE @IN_DATA_INI_NF VARCHAR (8) = (SELECT DATA_INI_NF FROM DRE_INDL WHERE ID_ANALISE = @IN_ID_ANALISE)
	DECLARE @IN_DATA_FIM_NF VARCHAR (8) = (SELECT DATA_FIM_NF FROM DRE_INDL WHERE ID_ANALISE = @IN_ID_ANALISE)

	PRINT 'GERANDO ITENS PARA A ANALISE ' + CAST (@IN_ID_ANALISE AS VARCHAR (10))
	PRINT 'INICIANDO LEITURA DE NOTAS ENTRE ' + @IN_DATA_INI_NF + ' E ' + @IN_DATA_FIM_NF

	-- CRIA TABELA PARA RETORNO DE DADOS
	IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'DRE_INDL_ITENS'))
	BEGIN
		print 'CRIANDO TABELA PARA RESULTADO FINAL'

		CREATE TABLE DRE_INDL_ITENS (
			ID_ANALISE              INT DEFAULT ''
			,FILIAL                 VARCHAR (2) default ''
			,EMISSAO                VARCHAR (8) default ''
			,DOC                    VARCHAR (9) default ''
			,SERIE                  VARCHAR (3) default ''
			,ITEMNF                 VARCHAR (4) default ''
			,CLIENTE                VARCHAR (6) default ''
			,LOJA                   VARCHAR (2) default ''
			,CLIBASE                VARCHAR (6) default ''
			,LOJABASE               VARCHAR (2) default ''
			,PRODUTO                VARCHAR (15) default ''
			,DERIVADO_DE_UVA        VARCHAR (1) default ''
			,MARCA_TERCEIROS        VARCHAR (1) DEFAULT ''
			,F4_MARGEM              VARCHAR (1) default ''
			,VALORMERC              FLOAT DEFAULT 0
			,VALORNF                FLOAT DEFAULT 0
			,QUANT                  FLOAT DEFAULT 0
			,QTLITROS               FLOAT DEFAULT 0
			,CUSTO                  FLOAT DEFAULT 0
			,CPV                    FLOAT DEFAULT 0
			,CPV_RATEIO             FLOAT DEFAULT 0
			,PIS_NF                 FLOAT DEFAULT 0
			,COFINS_NF              FLOAT DEFAULT 0
			,ICMS_NF                FLOAT DEFAULT 0
			,IPI_NF                 FLOAT DEFAULT 0
			,ST_NF                  FLOAT DEFAULT 0
			,IMPOSTOS_RATEIO        FLOAT DEFAULT 0
			,BONIF_RATEIO           FLOAT DEFAULT 0
			,RAPELPREV              FLOAT DEFAULT 0
			,RAPEL_RATEIO           FLOAT DEFAULT 0
			,FRETEPREV              FLOAT DEFAULT 0
			,FRETE_RATEIO           FLOAT DEFAULT 0
			,COMISPREV              FLOAT DEFAULT 0
			,COMIS_RATEIO           FLOAT DEFAULT 0
			,VERBAS_RATEIO          FLOAT DEFAULT 0
			,DF_RAPEL               FLOAT DEFAULT 0
			,DF_ENCART              FLOAT DEFAULT 0
			,DF_FEIRAS              FLOAT DEFAULT 0
			,DF_FRETES              FLOAT DEFAULT 0
			,DF_DESCONT             FLOAT DEFAULT 0
			,DF_DEVOL               FLOAT DEFAULT 0
			,DF_CAMPANH             FLOAT DEFAULT 0
			,DF_ABLOJA              FLOAT DEFAULT 0
			,DF_CONTRAT             FLOAT DEFAULT 0
			,DF_OUTROS              FLOAT DEFAULT 0
			,LOTECTL                VARCHAR (10) default ''
			,FILIAL_FABRICACAO      VARCHAR (2) default ''
			,OP_FABRICACAO          VARCHAR (14) default ''
			,GRP_EMB                VARCHAR (2) default ''
			,LIN_ENV                VARCHAR (6) default ''
			,LIN_COML               VARCHAR (2) default ''
			,GRP_LIN_COML           VARCHAR (1) default ''
			,GRP_ANALISE_TETRA1     VARCHAR (1) default ''
			,GRP_ANALISE_TETRA2     VARCHAR (1) default ''
			,CC                     VARCHAR (9) default ''
			,CUSTO_TOT_ME           FLOAT DEFAULT 0
			,CUSTO_TOT_BN           FLOAT DEFAULT 0
			,CUSTO_TOT_PERDAS       FLOAT DEFAULT 0
			,ALUGUEIS_TETRA_200     FLOAT DEFAULT 0
			,ALUGUEIS_TETRA_1000    FLOAT DEFAULT 0
			,CREDITOS_TETRA_200     FLOAT DEFAULT 0
			,CREDITOS_TETRA_1000    FLOAT DEFAULT 0
			,DESP_MAT_AUX           FLOAT DEFAULT 0
			,DESP_MAT_AUX_RATEIO    FLOAT DEFAULT 0
			,GASTOS_INDL            FLOAT DEFAULT 0
			,GASTOS_INDL_RATEIO     FLOAT DEFAULT 0
			,GASTOS_PESSOAL         FLOAT DEFAULT 0
			,GASTOS_PESSOAL_RATEIO  FLOAT DEFAULT 0
			,GASTOS_MANUT           FLOAT DEFAULT 0
			,GASTOS_MANUT_RATEIO    FLOAT DEFAULT 0
			,GASTOS_EN_ELET         FLOAT DEFAULT 0
			,GASTOS_EN_ELET_RATEIO  FLOAT DEFAULT 0
			,GASTOS_COMBUST         FLOAT DEFAULT 0
			,GASTOS_COMBUST_RATEIO  FLOAT DEFAULT 0
			,GASTOS_INDL_OUTRAS     FLOAT DEFAULT 0
			,GASTOS_COML_OUTRAS     FLOAT DEFAULT 0
			,DESP_ADMIN             FLOAT DEFAULT 0
			,OUTROS_INGRESSOS       FLOAT DEFAULT 0
			,RESULT_FIN             FLOAT DEFAULT 0
			,FORMA_RATEIO           VARCHAR (1) DEFAULT ''
			,PESO_PARA_RATEIO       FLOAT DEFAULT 0
			,MARCA_TERCEIRO         VARCHAR (15) DEFAULT ''
			,TAB_PRC_LOJA           VARCHAR (1) DEFAULT ''
		)
		CREATE NONCLUSTERED INDEX IDX1 ON DRE_INDL_ITENS (ID_ANALISE, CC, F4_MARGEM, EMISSAO)
		CREATE NONCLUSTERED INDEX IDX2 ON DRE_INDL_ITENS (ID_ANALISE, CC, EMISSAO, F4_MARGEM)
		CREATE NONCLUSTERED INDEX IDX3 ON DRE_INDL_ITENS (ID_ANALISE, F4_MARGEM, CC, EMISSAO)
		CREATE NONCLUSTERED INDEX IDX4 ON DRE_INDL_ITENS (ID_ANALISE, F4_MARGEM, EMISSAO, CC)
		CREATE NONCLUSTERED INDEX IDX5 ON DRE_INDL_ITENS (ID_ANALISE, EMISSAO, CC, F4_MARGEM)
		CREATE NONCLUSTERED INDEX IDX6 ON DRE_INDL_ITENS (ID_ANALISE, EMISSAO, F4_MARGEM, CC)
		CREATE NONCLUSTERED INDEX IDX7 ON DRE_INDL_ITENS (ID_ANALISE, FILIAL, CC, F4_MARGEM, EMISSAO)
		CREATE NONCLUSTERED INDEX IDX8 ON DRE_INDL_ITENS (ID_ANALISE, FILIAL, CC, EMISSAO, F4_MARGEM)
		CREATE NONCLUSTERED INDEX IDX9 ON DRE_INDL_ITENS (ID_ANALISE, FILIAL, F4_MARGEM, CC, EMISSAO)
		CREATE NONCLUSTERED INDEX IDXA ON DRE_INDL_ITENS (ID_ANALISE, FILIAL, F4_MARGEM, EMISSAO, CC)
		CREATE NONCLUSTERED INDEX IDXB ON DRE_INDL_ITENS (ID_ANALISE, FILIAL, EMISSAO, CC, F4_MARGEM)
		CREATE NONCLUSTERED INDEX IDXC ON DRE_INDL_ITENS (ID_ANALISE, FILIAL, EMISSAO, F4_MARGEM, CC)
	END


	-- BUSCA CUSTOS DAS ULTIMAS OPS DE CADA PRODUTO
	PRINT 'BUSCANDO CUSTO DAS ULTIMAS OP'
--	PRINT 'CONSIDERANDO OPS ENTRE ' + protheus.dbo.VA_DatetimeToVarchar (DATEADD (year, -1, CAST (@IN_DATA_INI_NF AS DATETIME))) + ' E ' + protheus.dbo.VA_DatetimeToVarchar (CAST (@IN_DATA_FIM_NF AS DATETIME))
	PRINT 'CONSIDERANDO OPS ENTRE ' + FORMAT (DATEADD (year, -1, CAST (@IN_DATA_INI_NF AS DATETIME)), 'dd/MM/yyyy') + ' E ' + FORMAT (CAST (@IN_DATA_FIM_NF AS DATETIME), 'dd/MM/yyyy')
	DROP TABLE IF EXISTS #ULT_OP_COM_CUSTO
	SELECT ULTIMAS_OP.C2_PRODUTO
		, SUM (CASE WHEN SD3.D3_CF LIKE 'RE%' AND SD3.D3_VAPEROP != 'S' AND SD3.D3_TIPO = 'MO' THEN SD3.D3_CUSTO1 ELSE 0 END) / SUM (CASE WHEN SD3.D3_CF LIKE 'PR%' THEN SD3.D3_QUANT ELSE 0 END) AS CUSTO_UNIT_MO
		, SUM (CASE WHEN SD3.D3_CF LIKE 'RE%' AND SD3.D3_VAPEROP != 'S' AND SD3.D3_TIPO = 'AP' THEN SD3.D3_CUSTO1 ELSE 0 END) / SUM (CASE WHEN SD3.D3_CF LIKE 'PR%' THEN SD3.D3_QUANT ELSE 0 END) AS CUSTO_UNIT_AP
		, SUM (CASE WHEN SD3.D3_CF LIKE 'RE%' AND SD3.D3_VAPEROP != 'S' AND SD3.D3_TIPO = 'GF' THEN SD3.D3_CUSTO1 ELSE 0 END) / SUM (CASE WHEN SD3.D3_CF LIKE 'PR%' THEN SD3.D3_QUANT ELSE 0 END) AS CUSTO_UNIT_GF
		, SUM (CASE WHEN SD3.D3_CF LIKE 'RE%' AND SD3.D3_VAPEROP != 'S' AND SD3.D3_TIPO = 'ME' THEN SD3.D3_CUSTO1 ELSE 0 END) / SUM (CASE WHEN SD3.D3_CF LIKE 'PR%' THEN SD3.D3_QUANT ELSE 0 END) AS CUSTO_UNIT_ME
		, SUM (CASE WHEN SD3.D3_CF LIKE 'RE%' AND SD3.D3_VAPEROP != 'S' AND SD3.D3_TIPO = 'VD' THEN SD3.D3_CUSTO1 ELSE 0 END) / SUM (CASE WHEN SD3.D3_CF LIKE 'PR%' THEN SD3.D3_QUANT ELSE 0 END) AS CUSTO_UNIT_VD
		, SUM (CASE WHEN SD3.D3_CF LIKE 'RE%' AND SD3.D3_VAPEROP != 'S' AND SD3.D3_TIPO = 'BN' THEN SD3.D3_CUSTO1 ELSE 0 END) / SUM (CASE WHEN SD3.D3_CF LIKE 'PR%' THEN SD3.D3_QUANT ELSE 0 END) AS CUSTO_UNIT_BN
		, SUM (CASE WHEN SD3.D3_CF LIKE 'RE%' AND SD3.D3_VAPEROP  = 'S' AND SD3.D3_TIPO IN ('AP', 'MO', 'GF', 'ME', 'VD', 'BN') THEN SD3.D3_CUSTO1 ELSE 0 END) / SUM (CASE WHEN SD3.D3_CF LIKE 'PR%' THEN SD3.D3_QUANT ELSE 0 END) AS CUSTO_UNIT_PERDAS
		, SUM (CASE WHEN SD3.D3_CF LIKE 'RE%' AND SD3.D3_TIPO IN ('AP', 'MO', 'GF', 'ME', 'VD', 'BN') THEN SD3.D3_CUSTO1 ELSE 0 END) / SUM (CASE WHEN SD3.D3_CF LIKE 'PR%' THEN SD3.D3_QUANT ELSE 0 END) AS CUSTO_UNIT_GERAL
		INTO #ULT_OP_COM_CUSTO
	FROM (SELECT C2_PRODUTO,C2_FILIAL,C2_NUM,SC2.C2_ITEM,SC2.C2_SEQUEN,SC2.C2_ITEMGRD, SC2.C2_DATRF, SC2.C2_QUJE
			FROM protheus.dbo.SC2010 SC2
			WHERE SC2.D_E_L_E_T_ = ''
			AND SC2.C2_QUJE > 0
			AND SC2.C2_DATRF >= protheus.dbo.VA_DatetimeToVarchar (DATEADD (year, -1, CAST (@IN_DATA_INI_NF AS DATETIME)))
--			AND SC2.C2_DATRF >= FORMAT (DATEADD (year, -1, CAST (@IN_DATA_INI_NF AS DATETIME)), 'yyyyMMdd')
			AND SC2.C2_DATRF <= protheus.dbo.VA_DatetimeToVarchar (CAST (@IN_DATA_FIM_NF AS DATETIME))
--			AND SC2.C2_DATRF <= FORMAT (CAST (@IN_DATA_FIM_NF AS DATETIME), 'yyyyMMdd')
			) AS ULTIMAS_OP, 
		protheus.dbo.SD3010 SD3
	WHERE SD3.D_E_L_E_T_ = ''
		AND SD3.D3_FILIAL = ULTIMAS_OP.C2_FILIAL
		AND SD3.D3_OP = ULTIMAS_OP.C2_NUM + ULTIMAS_OP.C2_ITEM + ULTIMAS_OP.C2_SEQUEN + ULTIMAS_OP.C2_ITEMGRD
		AND SD3.D3_ESTORNO != 'S'
	GROUP BY ULTIMAS_OP.C2_PRODUTO
	CREATE NONCLUSTERED INDEX IND1 ON #ULT_OP_COM_CUSTO (C2_PRODUTO)
	--SELECT * FROM #ULT_OP_COM_CUSTO


	-- FAZ UMA ABERTURA DO CUSTO DAS OPS
	DROP TABLE IF EXISTS #ABERTURA_CUSTO_OP
	SELECT C2_PRODUTO
		, CUSTO_UNIT_AP * 100 / CUSTO_UNIT_GERAL AS PERC_CUSTO_AP
		, CUSTO_UNIT_MO * 100 / CUSTO_UNIT_GERAL AS PERC_CUSTO_MO
		, CUSTO_UNIT_GF * 100 / CUSTO_UNIT_GERAL AS PERC_CUSTO_GF
		, CUSTO_UNIT_ME * 100 / CUSTO_UNIT_GERAL AS PERC_CUSTO_ME
		, CUSTO_UNIT_VD * 100 / CUSTO_UNIT_GERAL AS PERC_CUSTO_VD
		, CUSTO_UNIT_BN * 100 / CUSTO_UNIT_GERAL AS PERC_CUSTO_BN
		, CUSTO_UNIT_PERDAS * 100 / CUSTO_UNIT_GERAL AS PERC_CUSTO_PERDAS
	INTO #ABERTURA_CUSTO_OP
	FROM #ULT_OP_COM_CUSTO
	WHERE CUSTO_UNIT_GERAL > 0
	CREATE NONCLUSTERED INDEX IND1 ON #ABERTURA_CUSTO_OP (C2_PRODUTO)
	--SELECT * FROM #ABERTURA_CUSTO_OP ORDER BY C2_PRODUTO


	-- BUSCA NOTAS FISCAIS DE FATURAMENTO E BONIFICACAO
	PRINT 'LENDO FATURAMENTO'
	DROP TABLE IF EXISTS #FAT_BONIF
	SELECT D2_FILIAL, D2_EMISSAO, D2_DOC, D2_SERIE, D2_CLIENTE, D2_LOJA, D2_ITEM
		,D2_COD AS PRODUTO, F4_MARGEM
		,SUM (D2_PRCVEN * CASE WHEN D2_QUANT = 0 THEN 1 ELSE D2_QUANT END) AS VALORMERC
		,SUM (D2_PRCVEN * D2_QUANT + SD2.D2_VALIPI + SD2.D2_ICMSRET) AS VALORNF
		,SUM (SD2.D2_QUANT) AS QUANT
		,SUM (CASE SD2.D2_TP
				WHEN 'PA' THEN SD2.D2_QUANT * SB1.B1_LITROS
				WHEN 'PI' THEN SD2.D2_QUANT * SB1.B1_LITROS
				WHEN 'VD' THEN SD2.D2_QUANT * SB1.B1_LITROS
				ELSE 0
			END) AS QTLITROS
		,SUM (SD2.D2_CUSTO1) AS CUSTO
		,SUM (CASE WHEN D2_TP != 'GG' AND D2_COD != '9999' AND SF4.F4_TOCON IN ('01','06') THEN SD2.D2_CUSTO1 ELSE 0 END) AS CPV  -- PARA MANTER COMPATIBILIDADE COM LPAD 678/000
		,SUM (D2_VALIMP6) AS PIS
		,SUM (D2_VALIMP5) AS COFINS
		,SUM (D2_VALICM) AS ICMS
		,SUM (D2_VALIPI) AS IPI
		,SUM (D2_ICMSRET) AS ST
		,SUM (D2_VRAPEL) AS RAPELPREV
		,SUM ((D2_PRCVEN * D2_QUANT + SD2.D2_PVCOND) * SD2.D2_COMIS1 / 100) AS COMISPREV
		,SUM (ISNULL (CASE F2_PBRUTO WHEN 0 THEN 0 ELSE ROUND(C5_MVFRE * (B1_P_BRT * D2_QUANT) / F2_PBRUTO, 2) END, 0)) AS FRETEPREV
		,SUM (ISNULL (SD2.D2_TOTAL * DESCFIN.DFRAPEL   / CASE SF2.F2_VALMERC WHEN 0 THEN 1 ELSE SF2.F2_VALMERC END, 0)) AS DF_RAPEL
		,SUM (ISNULL (SD2.D2_TOTAL * DESCFIN.DFENCART  / CASE SF2.F2_VALMERC WHEN 0 THEN 1 ELSE SF2.F2_VALMERC END, 0)) AS DF_ENCART
		,SUM (ISNULL (SD2.D2_TOTAL * DESCFIN.DFFEIRAS  / CASE SF2.F2_VALMERC WHEN 0 THEN 1 ELSE SF2.F2_VALMERC END, 0)) AS DF_FEIRAS
		,SUM (ISNULL (SD2.D2_TOTAL * DESCFIN.DFFRETES  / CASE SF2.F2_VALMERC WHEN 0 THEN 1 ELSE SF2.F2_VALMERC END, 0)) AS DF_FRETES
		,SUM (ISNULL (SD2.D2_TOTAL * DESCFIN.DFDESCONT / CASE SF2.F2_VALMERC WHEN 0 THEN 1 ELSE SF2.F2_VALMERC END, 0)) AS DF_DESCONT
		,SUM (ISNULL (SD2.D2_TOTAL * DESCFIN.DFDEVOL   / CASE SF2.F2_VALMERC WHEN 0 THEN 1 ELSE SF2.F2_VALMERC END, 0)) AS DF_DEVOL
		,SUM (ISNULL (SD2.D2_TOTAL * DESCFIN.DFCAMPANH / CASE SF2.F2_VALMERC WHEN 0 THEN 1 ELSE SF2.F2_VALMERC END, 0)) AS DF_CAMPANH
		,SUM (ISNULL (SD2.D2_TOTAL * DESCFIN.DFABLOJA  / CASE SF2.F2_VALMERC WHEN 0 THEN 1 ELSE SF2.F2_VALMERC END, 0)) AS DF_ABLOJA
		,SUM (ISNULL (SD2.D2_TOTAL * DESCFIN.DFCONTRAT / CASE SF2.F2_VALMERC WHEN 0 THEN 1 ELSE SF2.F2_VALMERC END, 0)) AS DF_CONTRAT
		,SUM (ISNULL (SD2.D2_TOTAL * DESCFIN.DFOUTROS  / CASE SF2.F2_VALMERC WHEN 0 THEN 1 ELSE SF2.F2_VALMERC END, 0)) AS DF_OUTROS
		,SUBSTRING (ISNULL ((select top 1 lote
			from protheus.dbo.tb_wms_lotes
			where empresa = 1 and documento_id = 'DAK' + D2_FILIAL + F2_CARGA + '01' and cod_item = D2_COD
			order by qtde desc), ''), 1, 10) AS LOTE
		,SPACE(2) AS FILIAL_FABRICACAO, SPACE (14) AS OP_FABRICACAO
		,B1_GRPEMB, B1_VALINEN, SB1.B1_CODLIN
		,CASE WHEN SD2.D2_FILIAL IN ('08','10','13') AND D2_SERIE != '10'
			THEN ISNULL ((SELECT L2_TABELA
							FROM protheus.dbo.SL2010 SL2
							WHERE SL2.D_E_L_E_T_ = ''
							AND L2_FILIAL = SD2.D2_FILIAL
							AND L2_DOC = D2_DOC
							AND L2_SERIE = SD2.D2_SERIE
							AND SL2.L2_ITEM = D2_ITEM)
				, '')
			ELSE ''
			END AS TAB_PRC_LOJA
	INTO #FAT_BONIF
	FROM protheus.dbo.SF4010 SF4, protheus.dbo.SD2010 SD2
		INNER JOIN protheus.dbo.SB1010 SB1 ON (SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  ' AND SB1.B1_COD = SD2.D2_COD)
		INNER JOIN protheus.dbo.SF2010 AS SF2
			ON (SD2.D2_DOC = SF2.F2_DOC
			AND SD2.D2_SERIE = SF2.F2_SERIE
			AND SF2.D_E_L_E_T_ <> '*'
			AND SD2.D2_FILIAL = SF2.F2_FILIAL)
		LEFT JOIN protheus.dbo.SC5010 AS SC5
			ON (SC5.C5_NUM = SD2.D2_PEDIDO
			AND SC5.D_E_L_E_T_ <> '*'
			AND SC5.C5_FILIAL = SD2.D2_FILIAL)
		-- TOTAIS POR TIPO DE DESCONTO CONCEDIDO NAS BAIXAS DOS TITULOS NO FINANCEIRO.
		LEFT JOIN (SELECT SE5.E5_FILIAL, SE5.E5_PREFIXO, SE5.E5_NUMERO, SE5.E5_CLIENTE, SE5.E5_LOJA,
					SUM (DISTINCT SE5.E5_VARAPEL) AS DFRAPEL,
					SUM (DISTINCT SE5.E5_VAENCAR) AS DFENCART,
					SUM (DISTINCT SE5.E5_VAFEIRA) AS DFFEIRAS,
					SUM (DISTINCT SE5.E5_VADFRET) AS DFFRETES,
					SUM (DISTINCT SE5.E5_VADDESC) AS DFDESCONT,
					SUM (DISTINCT SE5.E5_VADDEVO) AS DFDEVOL,
					SUM (DISTINCT SE5.E5_VADCMPV) AS DFCAMPANH,
					SUM (DISTINCT SE5.E5_VADAREI) AS DFABLOJA,
					SUM (DISTINCT SE5.E5_VADMULC) AS DFCONTRAT,
					SUM (DISTINCT SE5.E5_VADOUTR) AS DFOUTROS
					FROM protheus.dbo.SE5010 SE5
					WHERE SE5.D_E_L_E_T_ = ''
					AND SE5.E5_RECPAG = 'R'
					AND SE5.E5_SITUACA != 'C'
					AND SE5.E5_TIPODOC NOT IN ('TR', 'EC', 'ES', 'TE', 'CP', 'JR', 'DC', 'MT', 'V2', 'J2')
					GROUP BY SE5.E5_FILIAL, SE5.E5_PREFIXO, SE5.E5_NUMERO, SE5.E5_CLIENTE, SE5.E5_LOJA) AS DESCFIN
					ON (DESCFIN.E5_FILIAL = SD2.D2_FILIAL
					AND DESCFIN.E5_PREFIXO = SD2.D2_SERIE
					AND DESCFIN.E5_NUMERO = SD2.D2_DOC
					AND DESCFIN.E5_CLIENTE = SD2.D2_CLIENTE
					AND DESCFIN.E5_LOJA = SD2.D2_LOJA)
	WHERE SF4.D_E_L_E_T_ = ''
		AND SF4.F4_FILIAL = '  '
		AND SF4.F4_CODIGO = SD2.D2_TES
		AND SF4.F4_MARGEM IN ('1', '3')
		AND SD2.D_E_L_E_T_ = ''
		AND SD2.D2_EMISSAO BETWEEN @IN_DATA_INI_NF and @IN_DATA_FIM_NF
		AND SD2.D2_TIPO != 'D'
	GROUP BY D2_FILIAL, D2_EMISSAO, D2_DOC, D2_SERIE, D2_CLIENTE, D2_LOJA, D2_COD, F4_MARGEM, F2_CARGA, SF2.F2_PBRUTO, SC5.C5_MVFRE, SB1.B1_P_BRT, SB1.B1_GRPEMB, SB1.B1_VALINEN, SB1.B1_LITROS, SB1.B1_CODLIN, SD2.D2_QUANT, D2_ITEM
	CREATE NONCLUSTERED INDEX IND1 ON #FAT_BONIF (PRODUTO)

	-- BUSCA A FILIAL ONDE FOI FABRICADO E A ORDEM DE PRODUCAO, CONFORME LOTE VENDIDO, QUANDO DISPONIVEL.
	UPDATE #FAT_BONIF
			SET FILIAL_FABRICACAO = C2_FILIAL, OP_FABRICACAO = C2_NUM + C2_ITEM + C2_SEQUEN + C2_ITEMGRD
		FROM #FAT_BONIF, protheus.dbo.SC2010 SC2
		WHERE SC2.D_E_L_E_T_ = '' AND C2_NUM + C2_ITEM = #FAT_BONIF.LOTE
		AND D2_FILIAL = '01' AND C2_FILIAL = '01' -- SOH TEMOS FULLSOFT NA FILIAL 01
		AND SC2.C2_PRODUTO = #FAT_BONIF.PRODUTO


	-- BUSCA NOTAS FISCAIS DE DEVOLUCAO
	PRINT 'LENDO DEVOLUCOES'
	DROP TABLE IF EXISTS #DEVOL
	SELECT D1_FILIAL, D1_DTDIGIT, D1_DOC, D1_SERIE, D1_FORNECE, D1_LOJA, D1_ITEM
		,D1_COD AS PRODUTO, F4_MARGEM
		,SUM (D1_VUNIT * CASE WHEN D1_QUANT = 0 THEN 1 ELSE D1_QUANT END) AS VALORMERC
		,SUM (D1_TOTAL + D1_VALIPI + D1_ICMSRET + D1_DESPESA + D1_VALFRE - D1_VALDESC) AS VALORNF
		,SUM (SD1.D1_QUANT) AS QUANT
		,SUM (CASE SD1.D1_TP
				WHEN 'PA' THEN SD1.D1_QUANT * SB1.B1_LITROS
				WHEN 'PI' THEN SD1.D1_QUANT * SB1.B1_LITROS
				WHEN 'VD' THEN SD1.D1_QUANT * SB1.B1_LITROS
				ELSE 0
			END) AS QTLITROS
		,SUM (SD1.D1_CUSTO) AS CUSTO
		,SUM (CASE WHEN D1_COD != '9999' AND SF4.F4_TOCON = '51' THEN D1_CUSTO ELSE 0 END) AS CPV  -- PARA MANTER COMPATIBILIDADE COM LPAD 641/001
		,SUM (D1_VALIMP6) AS PIS
		,SUM (D1_VALIMP5) AS COFINS
		,SUM (D1_VALICM) AS ICMS
		,SUM (D1_VALIPI) AS IPI
		,SUM (D1_ICMSRET) AS ST
		,SUM (ISNULL (SD2_ORIG.D2_VRAPEL, 0)) AS RAPELPREV
		,SUM (ISNULL ((SD2_ORIG.D2_PRCVEN * SD2_ORIG.D2_QUANT + SD2_ORIG.D2_PVCOND) * SD2_ORIG.D2_COMIS1 / 100, 0)) AS COMISPREV
		,SUM (ISNULL (CASE F2_PBRUTO WHEN 0 THEN 0 ELSE ROUND(C5_MVFRE * (B1_P_BRT * D2_QUANT) / F2_PBRUTO, 2) END, 0)) AS FRETEPREV
		,0 AS DF_RAPEL, 0 AS DF_ENCART, 0 AS DF_FEIRAS, 0 AS DF_FRETES, 0 AS DF_DESCONT, 0 AS DF_DEVOL, 0 AS DF_CAMPANH, 0 AS DF_ABLOJA, 0 AS DF_CONTRAT, 0 AS DF_OUTROS
		,'' AS LOTE, '' AS FILIAL_FABRICACAO, '' AS OP_FABRICACAO
		,B1_GRPEMB, B1_VALINEN, SB1.B1_CODLIN
		,'' AS TAB_PRC_LOJA
	INTO #DEVOL
	FROM protheus.dbo.SF4010 SF4, protheus.dbo.SD1010 SD1
		INNER JOIN protheus.dbo.SB1010 SB1 ON (SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  ' AND SB1.B1_COD = SD1.D1_COD)
		LEFT JOIN protheus.dbo.SD2010 SD2_ORIG
				INNER JOIN protheus.dbo.SF2010 AS SF2_ORIG
					ON (SF2_ORIG.D_E_L_E_T_ <> '*'
					AND SF2_ORIG.F2_FILIAL = SD2_ORIG.D2_FILIAL
					AND SF2_ORIG.F2_DOC = SD2_ORIG.D2_DOC
					AND SF2_ORIG.F2_SERIE = SD2_ORIG.D2_SERIE)
				LEFT JOIN protheus.dbo.SC5010 AS SC5_ORIG
					ON (SC5_ORIG.C5_NUM = SD2_ORIG.D2_PEDIDO
					AND SC5_ORIG.D_E_L_E_T_ <> '*'
					AND SC5_ORIG.C5_FILIAL = SD2_ORIG.D2_FILIAL)
			ON (SD2_ORIG.D_E_L_E_T_ = ''
				AND SD2_ORIG.D2_FILIAL = SD1.D1_FILIAL
				AND SD2_ORIG.D2_DOC = SD1.D1_NFORI
				AND SD2_ORIG.D2_SERIE = SD1.D1_SERIORI
				AND SD2_ORIG.D2_ITEM = SD1.D1_ITEMORI)
	WHERE SF4.D_E_L_E_T_ = ''
		AND SF4.F4_FILIAL = '  '
		AND SF4.F4_CODIGO = SD1.D1_TES
		AND SF4.F4_MARGEM IN ('2')
		AND SD1.D_E_L_E_T_ = ''
		AND SD1.D1_DTDIGIT BETWEEN @IN_DATA_INI_NF and @IN_DATA_FIM_NF
		AND SD1.D1_TIPO = 'D'
		GROUP BY D1_FILIAL, D1_DTDIGIT, D1_DOC, D1_SERIE, D1_FORNECE, D1_LOJA, D1_COD, F4_MARGEM, SB1.B1_GRPEMB, SB1.B1_VALINEN, SB1.B1_CODLIN, SB1.B1_LITROS, SD1.D1_ITEM
	CREATE NONCLUSTERED INDEX IND1 ON #DEVOL (PRODUTO)
	--	SELECT * FROM #DEVOL


	-- GERA UMA TABELA UNICA DE NOTAS FISCAIS DEFININDO O LOCAL DE FABRICACAO (INDICADO PELO CAMPO 'LINHA DE ENVASE')
	PRINT 'UNINDO NOTAS DE SAIDA, DEVOLUCAO E DEFININDO LINHA DE ENVASE'
	DROP TABLE IF EXISTS #NOTAS
	SELECT MOVTOS.*
			, CASE WHEN MOVTOS.B1_VALINEN = '006' THEN 'F09'
				ELSE CASE WHEN MOVTOS.B1_GRPEMB = '18' THEN 'GRANEL'
					ELSE CASE WHEN CTT.CTT_CUSTO IS NULL
						OR CTT.CTT_CUSTO NOT IN ('011401','011402','011403','011404','011405','011406','091401','091403')
						OR SB1.B1_TIPO IN ('GG','PS','RE','ME','UC','II','BN','AI','VA','PP','MP','AI','MA') THEN 'OUTRAS'
						ELSE CTT_CUSTO
			END END END AS CC
			, CASE WHEN MOVTOS.B1_CODLIN IN ('01','18','03','04','06','07','08','09','11','13','21','23','30') THEN MOVTOS.B1_CODLIN
				ELSE 'ZZ' END
			AS CODLIN
	INTO #NOTAS
	FROM (SELECT * FROM #FAT_BONIF
			UNION ALL
			SELECT * FROM #DEVOL
		) AS MOVTOS
		LEFT JOIN protheus.dbo.SH1010 SH1
			LEFT JOIN protheus.dbo.CTT010 CTT
			ON (CTT.D_E_L_E_T_ = '' AND CTT.CTT_FILIAL = '  ' AND CTT.CTT_CUSTO = SH1.H1_CCUSTO)
		ON (SH1.D_E_L_E_T_ = '' AND SH1.H1_FILIAL = '  ' AND SH1.H1_CODIGO = MOVTOS.B1_VALINEN)
		JOIN protheus.dbo.SB1010 SB1 ON (SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  ' AND SB1.B1_COD = MOVTOS.PRODUTO)


	-- APAGA MOVIMENTACAO DESTA ANALISE (POSSO ESTAR REGERANDO OS DADOS), POIS A MESMA TABELA SERVE PARA TODAS AS ANALISES.
	DELETE DRE_INDL_ITENS WHERE ID_ANALISE = @IN_ID_ANALISE


	-- GERA TABELA DE DETALHAMENTO DOS CUSTOS DAS VENDAS, JUNTANDO DADOS DE
	-- FATURAMENTO + ULTIMAS OPs
	PRINT 'JUNTANDO NOTAS + ULTIMAS OP'
	INSERT INTO DRE_INDL_ITENS (
			ID_ANALISE
			,FILIAL
			,EMISSAO
			,DOC
			,SERIE
			,ITEMNF
			,CLIENTE
			,LOJA   
			,PRODUTO
			,F4_MARGEM
			,VALORMERC
			,VALORNF    
			,QUANT      
			,QTLITROS   
			,CUSTO      
			,CPV        
			,PIS_NF
			,COFINS_NF
			,ICMS_NF
			,IPI_NF
			,ST_NF
			,RAPELPREV  
			,COMISPREV  
			,FRETEPREV  
			,DF_RAPEL   
			,DF_ENCART  
			,DF_FEIRAS  
			,DF_FRETES  
			,DF_DESCONT 
			,DF_DEVOL   
			,DF_CAMPANH 
			,DF_ABLOJA  
			,DF_CONTRAT 
			,DF_OUTROS  
			,LOTECTL    
			,FILIAL_FABRICACAO
			,OP_FABRICACAO    
			,GRP_EMB          
			,LIN_ENV          
			,LIN_COML         
			,CC               
			,CUSTO_TOT_ME     
			,CUSTO_TOT_PERDAS
			,TAB_PRC_LOJA
		)
		(SELECT @IN_ID_ANALISE
			,#NOTAS.D2_FILIAL AS FILIAL
			,#NOTAS.D2_EMISSAO AS EMISSAO
			,#NOTAS.D2_DOC AS DOC
			,#NOTAS.D2_SERIE AS SERIE
			,#NOTAS.D2_ITEM AS ITEMNF
			,#NOTAS.D2_CLIENTE AS CLIENTE   
			,#NOTAS.D2_LOJA AS LOJA      
			,#NOTAS.PRODUTO AS PRODUTO
			,#NOTAS.F4_MARGEM AS F4_MARGEM
			,#NOTAS.VALORMERC AS VALORMERC
			,#NOTAS.VALORNF AS VALORNF    
			,#NOTAS.QUANT AS QUANT      
			,#NOTAS.QTLITROS AS QTLITROS   
			,#NOTAS.CUSTO AS CUSTO      
			,#NOTAS.CPV AS CPV        
			,#NOTAS.PIS AS PIS_NF
			,#NOTAS.COFINS AS COFINS_NF
			,#NOTAS.ICMS AS ICMS_NF
			,#NOTAS.IPI AS IPI_NF        
			,#NOTAS.ST AS ST_NF         
			,#NOTAS.RAPELPREV AS RAPELPREV  
			,#NOTAS.COMISPREV AS COMISPREV  
			,#NOTAS.FRETEPREV AS FRETEPREV  
			,#NOTAS.DF_RAPEL   AS DF_RAPEL   
			,#NOTAS.DF_ENCART  AS DF_ENCART  
			,#NOTAS.DF_FEIRAS  AS DF_FEIRAS  
			,#NOTAS.DF_FRETES  AS DF_FRETES  
			,#NOTAS.DF_DESCONT AS DF_DESCONT 
			,#NOTAS.DF_DEVOL   AS DF_DEVOL   
			,#NOTAS.DF_CAMPANH AS DF_CAMPANH 
			,#NOTAS.DF_ABLOJA  AS DF_ABLOJA  
			,#NOTAS.DF_CONTRAT AS DF_CONTRAT 
			,#NOTAS.DF_OUTROS  AS DF_OUTROS  
			,#NOTAS.LOTE AS LOTECTL    
			,#NOTAS.FILIAL_FABRICACAO AS FILIAL_FABRICACAO
			,#NOTAS.OP_FABRICACAO AS OP_FABRICACAO    
			,#NOTAS.B1_GRPEMB AS GRP_EMB          
			,#NOTAS.B1_VALINEN AS LIN_ENV          
			,#NOTAS.B1_CODLIN AS LIN_COML       
			,#NOTAS.CC AS CC
			,ISNULL (ABERT.PERC_CUSTO_ME, 0) / 100 * #NOTAS.CPV AS CUSTO_TOT_ME
			,ISNULL (ABERT.PERC_CUSTO_PERDAS, 0) / 100 * #NOTAS.CPV AS CUSTO_TOT_PERDAS
			,TAB_PRC_LOJA
		FROM #NOTAS
			LEFT JOIN #ABERTURA_CUSTO_OP ABERT ON (ABERT.C2_PRODUTO = #NOTAS.PRODUTO)
	)


	-- SE TEM A OP QUE FABRICOU O LOTE VENDIDO, BUSCA CUSTOS DIRETO NESSA OP.
	UPDATE DRE_INDL_ITENS
		SET CUSTO_TOT_BN = ISNULL (((SELECT sum (SD3.D3_CUSTO1)
										FROM protheus.dbo.SD3010 SD3
										WHERE SD3.D_E_L_E_T_ = '' AND SD3.D3_FILIAL = FILIAL_FABRICACAO
											AND SD3.D3_OP = OP_FABRICACAO AND SD3.D3_CF LIKE 'RE%' AND SD3.D3_TIPO = 'BN' AND SD3.D3_ESTORNO != 'S'
										)
									/ (SELECT sum (SD3.D3_QUANT)
										FROM protheus.dbo.SD3010 SD3
										WHERE SD3.D_E_L_E_T_ = '' AND SD3.D3_FILIAL = FILIAL_FABRICACAO
											AND SD3.D3_OP = OP_FABRICACAO AND SD3.D3_CF LIKE 'PR%' AND SD3.D3_ESTORNO != 'S'
										)), 0) * QUANT
		WHERE FILIAL_FABRICACAO != '' AND OP_FABRICACAO != ''
		AND ID_ANALISE = @IN_ID_ANALISE


	-- SE TEM CUSTO DE BENEFICIAMENTO, CONSIDERA-O NA LINHA DE ENVASE 'EM TERCEIROS'
	UPDATE DRE_INDL_ITENS SET CC = 'EM_3OS'
		WHERE CUSTO_TOT_BN > 0
		AND ID_ANALISE = @IN_ID_ANALISE

	-- COMO A LINHA DE ENVASE 013 (EM TERCEIROS) NAO TEM CENTRO DE CUSTO VALIDO, ALTERO AQUI PARA VALOR FIXO.
	UPDATE DRE_INDL_ITENS SET CC = 'EM_3OS'
		WHERE LIN_ENV = '013'
		AND ID_ANALISE = @IN_ID_ANALISE

/*	-- EM 2019 (E PRETENDE-SE CONTINUAR EM 2020) TODOS OS ESPUMANTES E FILTRADOS SAO FEITOS EM 3OS.
	UPDATE DRE_INDL_ITENS SET CC = 'EM_3OS'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		AND D.EMISSAO BETWEEN '20190101' AND '20201231'  -- PARA ANOS SEGUINTES, VERIFICAR SE VAI CONTINUAR ASSIM.
		AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND B1_TIPO = 'PA' AND (B1_DESC LIKE '%ESPUMANTE%' OR B1_DESC LIKE '%FILTRADO%' OR B1_DESC LIKE '%450 ML%')
*/

	-- VERIFICA SE O PRODUTO EH DERIVADO DE UVA. QUANDO POSSIVEL, USA CLASSIFICACOES FISCAIS DE SUCO, VINHO E COOLER.
	-- NO CASO DE QUENTAO, FAZ POR CODIGO PARA NAO MISTURAR COM NECTARES, ETC.
	UPDATE DRE_INDL_ITENS SET DERIVADO_DE_UVA = CASE WHEN (SUBSTRING (SB1.B1_POSIPI, 1, 4) IN ('2204', '2205', '2206', '2207')
															OR SB1.B1_POSIPI = '20096100'
															OR PRODUTO IN ('3019', '3020', '8247', '8248', '1195')  -- SAGO, QUENTAO, DESTILADO DE VINHO
															OR PRODUTO IN ('4087','4089','4076','4135','4129','2383','2384','8231','8235','2400','2401','8274','4342','3046','2463','2738','4151','2410','2395','2462','4562','4563','8288','8289')  -- NECTARES DE UVA
															)
															AND D.PRODUTO NOT IN ('1544','2551','2329','1416')  -- INDUSTRIALIZACOES PARA TERCEIROS
												 THEN 'S' ELSE 'N' END
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  ' AND SB1.B1_COD = PRODUTO
		AND ID_ANALISE = @IN_ID_ANALISE


	-- VERIFICA EH PRODUTO ENVASADO COM MARCA DE TERCEIROS (CBS, SARANDI, CARREFOUR, ETC.)
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIROS = CASE WHEN SB1.B1_VAMARCM = '10'
												 THEN 'S' ELSE 'N' END
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  ' AND SB1.B1_COD = PRODUTO
		AND ID_ANALISE = @IN_ID_ANALISE


	-- IDENTIFICA QUAL EH A MARCA DE TERCEIRO
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = ''
		FROM DRE_INDL_ITENS D
		WHERE ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'CARREFOUR'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		AND D.MARCA_TERCEIRO = '' AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%CARREFOUR%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'SARANDI'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%SARANDI%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'SANTA CLARA'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%SANTA CLARA%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'GARIBALDI'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%GARIBALDI%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'CBS'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%CBS%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'AURORA'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%AURORA%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'SANTORINI'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%SANTORINI%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'GIARETTA'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%GIARETTA%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'D ALDEIA'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%D ALDEIA%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'CAPITAL DA PAZ'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		 AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%CAPITAL DA PAZ%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'BELESSO'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		 AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%BELESSO%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'MONTE VENETO'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		 AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%MONTE VENETO%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'GOTAS DA FRUTA'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		 AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND (B1_DESC LIKE '%GOTAS FRUTA%' OR B1_DESC LIKE '%GOTAS DA FRUTA%')
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'BRETAS'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		 AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%BRETAS%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'BENASSI'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		 AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%BENASSI%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'VENTURINI'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		 AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%VENTURINI%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'DOM CANDIDO'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		 AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%DOM CANDIDO%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'ARGENTA'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		 AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%ARGENTA%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'MASTELA'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		 AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%MASTELA%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'MAIS FRUTA'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		 AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%MAIS FRUTA%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'VALE DA UVA'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		 AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%VALE DA UVA%'
	UPDATE DRE_INDL_ITENS SET MARCA_TERCEIRO = 'SPUNCH'
		FROM DRE_INDL_ITENS D, protheus.dbo.SB1010 SB1
		WHERE ID_ANALISE = @IN_ID_ANALISE
		 AND D.MARCA_TERCEIRO = ''	AND SB1.D_E_L_E_T_ = '' AND SB1.B1_FILIAL = '  '
		AND SB1.B1_COD = PRODUTO AND SB1.B1_VAMARCM = '10' AND B1_TIPO = 'PA' AND B1_DESC LIKE '%SPUNCH%'



	-- DETERMINA EM QUAL GRUPO DE LINHAS COMERCIAIS O PRODUTO DEVE SER CONSIDERADO.
	-- ISSO POR QUE, NA FUNCAO QUE EXPORTA OS DADOS POSTERIORMENTE, POSSO EXPORTAR
	-- POR LETRA (A/B/C/...) SEM ME PREOCUPAR EM FICAR ACUMULANDO POR LINHA.
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = ''  WHERE ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'A' WHERE GRP_LIN_COML = '' AND LIN_COML IN ('06') AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'B' WHERE GRP_LIN_COML = '' AND LIN_COML IN ('11') AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'C' WHERE GRP_LIN_COML = '' AND LIN_COML IN ('08') AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'D' WHERE GRP_LIN_COML = '' AND LIN_COML IN ('18') AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'E' WHERE GRP_LIN_COML = '' AND LIN_COML IN ('01') AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'F' WHERE GRP_LIN_COML = '' AND LIN_COML IN ('03') AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'G' WHERE GRP_LIN_COML = '' AND LIN_COML IN ('04') AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'H' WHERE GRP_LIN_COML = '' AND LIN_COML IN ('07') AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'I' WHERE GRP_LIN_COML = '' AND LIN_COML IN ('09') AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'J' WHERE GRP_LIN_COML = '' AND LIN_COML IN ('13') AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'K' WHERE GRP_LIN_COML = '' AND LIN_COML IN ('21') AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'L' WHERE GRP_LIN_COML = '' AND LIN_COML IN ('23') AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'M' WHERE GRP_LIN_COML = '' AND LIN_COML IN ('30') AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_LIN_COML = 'Z' WHERE GRP_LIN_COML = '' AND ID_ANALISE = @IN_ID_ANALISE

	-- DETERMINA EM QUAL GRUPO DE ANALISE DAS LINHAS TETRA O PRODUTO DEVE SER CONSIDERADO.
	-- ISSO POR QUE, NA FUNCAO QUE EXPORTA OS DADOS POSTERIORMENTE, POSSO EXPORTAR
	-- POR LETRA (A/B/C/...) SEM ME PREOCUPAR EM FICAR ACUMULANDO POR LINHA DE ENVASE.
	UPDATE DRE_INDL_ITENS SET GRP_ANALISE_TETRA1 = ''  WHERE ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_ANALISE_TETRA2 = ''  WHERE ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_ANALISE_TETRA1 = 'A' WHERE GRP_ANALISE_TETRA1 = '' AND CC = '011404' AND DERIVADO_DE_UVA = 'S' AND MARCA_TERCEIROS = 'N' AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_ANALISE_TETRA1 = 'B' WHERE GRP_ANALISE_TETRA1 = '' AND CC = '011404' AND DERIVADO_DE_UVA = 'S' AND MARCA_TERCEIROS = 'S' AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_ANALISE_TETRA1 = 'C' WHERE GRP_ANALISE_TETRA1 = '' AND CC = '011404' AND DERIVADO_DE_UVA = 'N' AND MARCA_TERCEIROS = 'N' AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_ANALISE_TETRA1 = 'D' WHERE GRP_ANALISE_TETRA1 = '' AND CC = '011404' AND DERIVADO_DE_UVA = 'N' AND MARCA_TERCEIROS = 'S' AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_ANALISE_TETRA2 = 'E' WHERE GRP_ANALISE_TETRA1 = '' AND CC = '011405' AND DERIVADO_DE_UVA = 'S' AND MARCA_TERCEIROS = 'N' AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_ANALISE_TETRA2 = 'F' WHERE GRP_ANALISE_TETRA1 = '' AND CC = '011405' AND DERIVADO_DE_UVA = 'S' AND MARCA_TERCEIROS = 'S' AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_ANALISE_TETRA2 = 'G' WHERE GRP_ANALISE_TETRA1 = '' AND CC = '011405' AND DERIVADO_DE_UVA = 'N' AND MARCA_TERCEIROS = 'N' AND ID_ANALISE = @IN_ID_ANALISE
	UPDATE DRE_INDL_ITENS SET GRP_ANALISE_TETRA2 = 'H' WHERE GRP_ANALISE_TETRA1 = '' AND CC = '011405' AND DERIVADO_DE_UVA = 'N' AND MARCA_TERCEIROS = 'S' AND ID_ANALISE = @IN_ID_ANALISE


	-- BUSCA CODIGO E LOJA BASE DO CLIENTE, PARA CASOS DE ANALISE POR GRANDES REDES.
	UPDATE DRE_INDL_ITENS SET CLIBASE = SA1.A1_VACBASE, LOJABASE = SA1.A1_VALBASE
		FROM DRE_INDL_ITENS, protheus.dbo.SA1010 SA1
		WHERE ID_ANALISE = @IN_ID_ANALISE
			AND SA1.D_E_L_E_T_ = ''
			AND SA1.A1_FILIAL = '  '
			AND SA1.A1_COD = CLIENTE
			AND SA1.A1_LOJA = LOJA

END
