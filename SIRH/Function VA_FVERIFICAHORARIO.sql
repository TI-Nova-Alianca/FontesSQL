use SIRH

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Descricao: Verifica se determinada pessoa deve ter seu acesso liberado neste momento. Retorna tambem dados de horarios para conferencia.
-- Autor....: Robert Koch
-- Data.....: 19/10/2020
--
-- Historico de alteracoes:
--

ALTER FUNCTION [dbo].[VA_FVERIFICAHORARIO]
-- PARAMETROS DE CHAMADA
(
	@PESSOA AS INT,
	@DTHRSOLICITADA AS DATETIME
)

-- RETORNA TABELA TEMPORARIA
returns @RET TABLE (
	 ACAO VARCHAR (1)
	,OBSERVACAO VARCHAR (100)
	,ESCALA VARCHAR (4)
	,HORARIO VARCHAR (4)
    ,HORAINI VARCHAR (5)
	,HORAFIM VARCHAR (5)
	,INILIBERACAO VARCHAR (5)
	,FIMLIBERACAO VARCHAR (5)
	)

AS
BEGIN
	DECLARE @CONTRATO INT = 0
	DECLARE @ESCALACONTRATO     VARCHAR (4) = ''
	DECLARE @ESCALAPROGRAMADA   VARCHAR (4) = ''
	DECLARE @ESCALAACONSIDERAR  VARCHAR (4) = ''
	DECLARE @CODHORARIODIASEMANA   VARCHAR (4) = ''
	DECLARE @CODHORARIOPROGRAMADO  VARCHAR (4) = ''
	DECLARE @CODHORARIOACONSIDERAR VARCHAR (4) = ''
--	DECLARE @DESCRICAOHORARIO   VARCHAR (40) = ''
	DECLARE @HORAINI VARCHAR (5) = ''
	DECLARE @HORAFIM VARCHAR (5) = ''
	DECLARE @PRIMEIRAMARCACAOESPERADA VARCHAR (5) = ''
	DECLARE @ULTIMAMARCACAOESPERADA VARCHAR (5) = ''
	DECLARE @ACAO VARCHAR (1) = ''
	DECLARE @OBS VARCHAR (100) = ''
	DECLARE @OP05 VARCHAR (1) = ''
	DECLARE @EM_FERIAS VARCHAR (1) = ''
	DECLARE @SITUACAOFOLHA VARCHAR (1) = ''
	DECLARE @DIADASEMANA INT = 0
--	DECLARE @AUTORIZHE VARCHAR (150) = ''
	DECLARE @MINUTOSTOLERANCIAANTES INT = 20;
	DECLARE @MINUTOSTOLERANCIADEPOIS INT = 20;
	DECLARE @INICIOLIBERACAO DATETIME;
	DECLARE @FIMLIBERACAO DATETIME;
	DECLARE @DTHRAUX DATETIME;
	DECLARE @DTHRSOLICITADA_INI DATETIME;
	DECLARE @DTHRSOLICITADA_FIM DATETIME;

	-- VERIFICA A SITUACAO DO CAMPO 'OPC05', QUE EH ONDE O PESSOAL DO RH PODE INFORMAR COMO O FUNCIONARIO DEVE SER TRATADO
	SET @OP05           = ISNULL ((SELECT OP05            FROM VA_VFUNCIONARIOS WHERE PESSOA = @PESSOA), 1)  -- TRATA NULL COMO SE FOSSE 1.
	SET @EM_FERIAS      = ISNULL ((SELECT EM_FERIAS       FROM VA_VFUNCIONARIOS WHERE PESSOA = @PESSOA), '')
	SET @CONTRATO       = ISNULL ((SELECT CONTRATO        FROM VA_VFUNCIONARIOS WHERE PESSOA = @PESSOA), '')
	SET @ESCALACONTRATO = ISNULL ((SELECT ESCALA_CONTRATO FROM VA_VFUNCIONARIOS WHERE PESSOA = @PESSOA), '')
	SET @SITUACAOFOLHA  = ISNULL ((SELECT SITUACAO        FROM VA_VFUNCIONARIOS WHERE PESSOA = @PESSOA), '')
	--PRINT 'Contrato: ' + str (@CONTRATO) --+ (SELECT NOME FROM VA_VFUNCIONARIOS WHERE PESSOA = @PESSOA)

	IF (@ACAO = '' AND @OP05 = 2)
	BEGIN
		SET @ACAO = 'B'
		SET @OBS = 'Pessoa marcada como SEMPRE BLOQUEAR'
	END
	IF (@ACAO = '' AND @OP05 = 3)
	BEGIN
		SET @ACAO = 'L'
		SET @OBS = 'Pessoa marcada como SEMPRE LIBERAR'
	END

	-- SE CHEGOU ATEH AQUI SEM ACAO DEFINIDA, EH POR QUE DEVE SER TRATADO CONFORME SITUACAO NA FOLHA.
	IF (@ACAO = '' AND @EM_FERIAS = 'S')
	BEGIN
		SET @ACAO = 'B'
		SET @OBS = 'Pessoa encontra-se EM FERIAS'
	END
	IF (@ACAO = '' AND @SITUACAOFOLHA = '2')
	BEGIN
		SET @ACAO = 'B'
		SET @OBS = 'Pessoa encontra-se AFASTADA'
	END
	IF (@ACAO = '' AND @SITUACAOFOLHA IN ('3','4'))
	BEGIN
		SET @ACAO = 'B'
		SET @OBS = 'Pessoa encontra-se DEMITIDA'
	END
	
	-- confirmar, ainda, se eh aqui que preciso verificar se tem ocorrencias como atestado.

	-- COM BASE NO HORARIO SOLICITADO VIA PARAMETRO, APLICA TOLERANCIAS PARA TER A FAIXA
	-- DE HORARIOS A VERIFICAR. POR EXEMPLO, QUANDO TIVER AUTORIZACAO DE HORA EXTRA CADASTRADA
	-- ENTRE AS 07:00 E 08:00, SE EU SOLICITAR VERIFICACAO AS 06:50, JA DEVE LIBERAR, POIS
	-- JAH ESTARIA NOS 10 MINUTOS DE TOLERANCIA ANTES.
	-- TRANSFORMA EM DATETIME PARA PODER APLICAR FUNCOES DE CALCULOS COM DATAS DO SQL.
	SET @DTHRSOLICITADA_INI = DATEADD (MINUTE, @MINUTOSTOLERANCIAANTES * -1, @DTHRSOLICITADA)
	SET @DTHRSOLICITADA_FIM = DATEADD (MINUTE, @MINUTOSTOLERANCIADEPOIS, @DTHRSOLICITADA)
	--PRINT 'Solicitado ' + CAST (@DTHRSOLICITADA AS VARCHAR (MAX)) + '. Entao vou verif. entre ' + CAST (@DTHRSOLICITADA_INI AS VARCHAR (MAX)) + '	e ' + CAST (@DTHRSOLICITADA_FIM AS VARCHAR (MAX))


	-- VERIFICA SE TEM PROGRAMACAO DE HORA EXTRA
	IF (@ACAO = '')
	BEGIN
		SET @OBS = (SELECT 'Hora extra autorizada entre ' + HORADE + ' e ' + HORAATE
					FROM RHAUTHORASEXTRAS
					WHERE CONTRATO = @CONTRATO
					AND CAST (FORMAT (DATAINICIO, 'yyyy-MM-dd') + ' ' + HORADE AS DATETIME) >= @DTHRSOLICITADA_INI
					AND CAST (FORMAT (DATATERMINO, 'yyyy-MM-dd') + ' ' + HORAATE AS DATETIME) <= @DTHRSOLICITADA_FIM)
		IF @OBS IS NULL
		BEGIN
			SET @OBS = ''
		END
		ELSE
		BEGIN
			SET @ACAO = 'L'
		END
	END

	-- SE AINDA NAO TEM DEFINICAO (BLOQUEADO,HORA EXTRA, ETC.) ENTAO VERIFICA SE TEM PROGRAMACAO DE HORARIO.
	IF (@ACAO = '')
	BEGIN
		SET @CODHORARIOPROGRAMADO = ISNULL ((SELECT HORARIO
											FROM RHPROGRAMACAOHORARIO
											WHERE CONTRATO = @CONTRATO
											AND FORMAT (DATAHORARIO, 'yyyy-MM-dd') = FORMAT (@DTHRSOLICITADA, 'yyyy-MM-dd'))
										, '')

		-- SE NAO TEM PROGRAMACAO DE HORARIO PARA ESTE DIA, PODE TER PROGRAMACAO DE ESCALA.
		IF (@CODHORARIOPROGRAMADO = '')
		BEGIN
			SET @ESCALAPROGRAMADA = ISNULL ((SELECT ESCALA
												FROM RHPROGRAMACAOESCALAS
												WHERE CONTRATO = @CONTRATO
												AND FORMAT (DATAINICIO, 'yyyy-MM-dd') <= FORMAT (@DTHRSOLICITADA, 'yyyy-MM-dd')
												AND FORMAT (DATATERMINO, 'yyyy-MM-dd') >= FORMAT (@DTHRSOLICITADA, 'yyyy-MM-dd'))
											, '')

			-- DEFINE A ESCALA A SER CONSIDERADA
			IF (@ESCALAPROGRAMADA = '')
			BEGIN
				SET @ESCALAACONSIDERAR = @ESCALACONTRATO
			END
			ELSE
			BEGIN
				SET @ESCALAACONSIDERAR = @ESCALAPROGRAMADA
				SET @OBS = 'Programacao escala ' + @ESCALAPROGRAMADA + ' para este dia.'
			END

			-- O METADADOS CONSIDERA SEGUNDA=1, TERCA=2, ..., DOMINGO=7
			SET @DIADASEMANA = DATEPART (WEEKDAY, @DTHRSOLICITADA) - 1
			IF (@DIADASEMANA = 0)
			BEGIN
				SET @DIADASEMANA = 7
			END

			 -- BUSCA CODIGO DO HORARIO A SER FEITO NESTE DIA DA SEMANA, DE ACORDO COM A ESCALA A SER CONSIDERADA.
			SET @CODHORARIODIASEMANA = (SELECT HORARIO FROM RHESCALASSEMANAIS WHERE ESCALA = @ESCALAACONSIDERAR AND DIASEMANA = @DIADASEMANA)
			SET @CODHORARIOACONSIDERAR = @CODHORARIODIASEMANA

		END
		ELSE
		BEGIN
			SET @OBS += 'Programacao horario ' + @CODHORARIOPROGRAMADO + ' para este dia.'
			SET @CODHORARIOACONSIDERAR = @CODHORARIOPROGRAMADO
		END
	END		

	-- SE CHEGOU ATEH AQUI SEM DEFINICAO DE BLOQUEIO, PRECISA VERIFICAR HORARIOS DO CODIGO DE HORARIO A CONSIDERAR.
	IF (@ACAO = '' AND @CODHORARIOACONSIDERAR IS NULL)
	BEGIN
		SET @OBS += 'Sem definicao de horario para o ' + CAST (@DIADASEMANA AS VARCHAR (1)) + 'o. dia da semana.'
		SET @ACAO = 'B'
	END

	IF (@ACAO = '')
	BEGIN
		-- BUSCA HORARIOS DA PRIMEIRA E ULTIMA MARCACOES DE PONTO ESPERADAS PARA ESSE HORARIO.
		SET @PRIMEIRAMARCACAOESPERADA = ISNULL ((SELECT HORAMARCACAO FROM RHHORARIOSMARCACOES WHERE HORARIO = @CODHORARIOACONSIDERAR AND CLASSEMARCACAO = '01'), '00:00')
		SET @ULTIMAMARCACAOESPERADA = ISNULL ((SELECT HORAMARCACAO FROM RHHORARIOSMARCACOES WHERE HORARIO = @CODHORARIOACONSIDERAR AND CLASSEMARCACAO = '99'), '00:00')
		--PRINT 'marcacoes esperadas: ' + cast (@PRIMEIRAMARCACAOESPERADA as varchar (max)) + ' e ' + cast (@ULTIMAMARCACAOESPERADA as varchar (max))

		-- APLICA TOLERANCIA AOS LIMITES DE HORARIO.
		-- TRANSFORMA EM DATETIME PARA PODER APLICAR FUNCOES DE CALCULOS COM DATAS DO SQL.
		SET @DTHRAUX = CAST (FORMAT (@DTHRSOLICITADA, 'yyyyMMdd') + ' ' + @PRIMEIRAMARCACAOESPERADA AS DATETIME)
		SET @INICIOLIBERACAO = DATEADD (MINUTE, @MINUTOSTOLERANCIAANTES * -1, @DTHRAUX)

		SET @DTHRAUX = CAST (FORMAT (@DTHRSOLICITADA, 'yyyyMMdd') + ' ' + @ULTIMAMARCACAOESPERADA AS DATETIME)
		SET @FIMLIBERACAO = DATEADD (MINUTE, @MINUTOSTOLERANCIADEPOIS, @DTHRAUX)

		-- SE DATA+HORA DE FIM MENOR QUE DATA+HORA DE INICIO, EH POR QUE TRATA-SE DE HORARIO NOTURNO (PASSA PELA MEIA NOITE)
		IF (@FIMLIBERACAO < @INICIOLIBERACAO)
		BEGIN
			--PRINT ('VIRA NOITE')
			IF (DATEPART (HOUR, @DTHRSOLICITADA) <= DATEPART (HOUR, @FIMLIBERACAO))
			BEGIN
				--PRINT 'MUDANDO INICIO LIBERACAO PARA ONTEM'
				SET @INICIOLIBERACAO = DATEADD (DAY, -1, @INICIOLIBERACAO)
			END
			ELSE
			BEGIN
				--PRINT 'MUDANDO FIM LIBERACAO PARA AMANHA'
				SET @FIMLIBERACAO = DATEADD (DAY, 1, @FIMLIBERACAO)
			END
		END
		--PRINT 'inicio e fim liberacao: ' + cast (@INICIOLIBERACAO as varchar (max)) + ' e ' + cast (@FIMLIBERACAO as varchar (max))

		IF (@DTHRSOLICITADA >= @INICIOLIBERACAO AND @DTHRSOLICITADA <= @FIMLIBERACAO)
		BEGIN
			SET @OBS  = 'Dentro do horario normal'
			SET @ACAO = 'L'
		END
		ELSE
		BEGIN
			SET @OBS  = 'Fora do horario normal'
			SET @ACAO = 'B'
		END
	END

	INSERT INTO @RET (ACAO, OBSERVACAO, ESCALA, HORARIO, HORAINI, HORAFIM, INILIBERACAO, FIMLIBERACAO)
	VALUES (@ACAO, @OBS, @ESCALAACONSIDERAR, @CODHORARIOACONSIDERAR, @HORAINI, @HORAFIM, @INICIOLIBERACAO, @FIMLIBERACAO)
RETURN
END
GO
