SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[MERCP_LIBERACAO_SOLIC_INVEST](
@P_NRO_SOLIC_INVEST			INT,
@P_USUARIO					VARCHAR(100),
@P_ACAO						INT,
@P_REINICIAR				INT,
@P_GRAVOU_SOLIC				INT OUT,
@P_DATA_ALTER_SOLIC			DATETIME = null,
@P_VALOR_INVEST_ORIGINAL	FLOAT = NULL
) AS
DECLARE
@VERRO                       VARCHAR(255),
@VDB_ALCP_GRPALCADA          VARCHAR(25),
@VDB_ALCADA_LIBERA           VARCHAR(50),
@V_ALCP_GRPALCADA_ANTERIOR   VARCHAR(25),
@V_ALCP_CODIGO_ANTERIOR      VARCHAR(25),
@VDB_ALCP_CODIGO             VARCHAR(25),
@V_ALCADA_OK                 INT,
@V_ALCADA_ATUAL              VARCHAR(5),
@V_CODIGO_USUARIO            VARCHAR(40),
@V_ALCP_CODIGO_TEMP          VARCHAR(25),
@V_REPRES			         INT,
@VDB_ALCP_VLRMAXLIB          FLOAT,
@V_VALOR_SOLICITACAO         FLOAT,
@V_LIBERA_TOTAL              INT,
@V_SITUACAO                  INT = 1,
@v_passo                     int,
@v_erro                      varchar(500),
@v_DATA_ALTERACAO            datetime,
@V_NUMERO_PEDIDO_TEMP        INT,
@V_MENSAGEM_TEMP             VARCHAR(500),
@V_CLIENTE                   FLOAT,
@V_USUARIO_TEMP              VARCHAR(100),
@v_alcada_ok_reinicia        int,
@V_POR_PERCENTUAL            INT,
@V_PERCENTUAL_SOLICITACAO    FLOAT,
@VDB_ALCP_DCTMAXEXC			 FLOAT,
@VMAIOR_PERCENTUAL_ITEM      FLOAT
SET NOCOUNT ON;
BEGIN
BEGIN TRY
SET @V_USUARIO_TEMP = @P_USUARIO
SET @P_GRAVOU_SOLIC = 0
set @v_passo = 1
SELECT @V_SITUACAO        = SITUACAO,
@v_DATA_ALTERACAO  = DATA_ALTERACAO
FROM DB_SOLIC_INVESTIMENTO
WHERE NUMERO = @P_NRO_SOLIC_INVEST
SELECT @V_CODIGO_USUARIO = CODIGO
FROM DB_USUARIO
WHERE USUARIO = @P_USUARIO
if isnull(@P_DATA_ALTER_SOLIC, '') <> '' and isnull(@v_DATA_ALTERACAO, '') <> ''
begin
if @v_DATA_ALTERACAO > @P_DATA_ALTER_SOLIC
begin
return;
end
end
IF @V_SITUACAO = 1
RETURN;
IF @P_REINICIAR = 1
BEGIN
set @v_alcada_ok_reinicia = 0
SELECT @v_alcada_ok_reinicia = 1
FROM DB_ALCADA_USUARIO
WHERE DB_ALCU_USUARIO = @V_CODIGO_USUARIO
and DB_ALCU_ALCADA in (SELECT DB_SOLINV_ALCADA
FROM DB_SOLIC_INVESTIMENTO_ALCADA
WHERE DB_SOLINV_NUMERO = @P_NRO_SOLIC_INVEST
AND DB_SOLINV_STATUS = 0)
if @v_alcada_ok_reinicia = 1
begin
DELETE FROM DB_SOLIC_INVESTIMENTO_ALCADA
WHERE DB_SOLINV_NUMERO = @P_NRO_SOLIC_INVEST
SET @P_USUARIO = NULL
end
else
begin
SET @VERRO  = 'SOLICITACAO ' + CAST(CAST(@P_NRO_SOLIC_INVEST AS BIGINT) AS VARCHAR) + ' ESTA TENTANDO SER LIBERADO POR UM USUARIO  QUE NÃO PERTENCE A ALCADA ATUAL. USUÁRIO: ' + @P_USUARIO
INSERT INTO DBS_ERROS_TRIGGERS(DBS_ERROS_DATA, DBS_ERROS_ERRO, DBS_ERROS_OBJETO)
VALUES
(GETDATE(), @VERRO, 'MERCP_LIBERACAO_SOLIC_INVEST')
return;
end
END
SELECT @V_REPRES					= REPRESENTANTE,
@V_VALOR_SOLICITACAO		= VALOR,
@V_CLIENTE					= CLIENTE,
@V_POR_PERCENTUAL           = POR_PERCENTUAL,
@V_PERCENTUAL_SOLICITACAO   = PERCENTUAL
FROM DB_SOLIC_INVESTIMENTO
WHERE NUMERO = @P_NRO_SOLIC_INVEST
SET @V_ALCADA_OK = 0;
set @v_passo = 2
IF ISNULL(@P_USUARIO, '') <> ''
BEGIN
SELECT @V_ALCADA_ATUAL = DB_SOLINV_ALCADA
FROM DB_SOLIC_INVESTIMENTO_ALCADA
WHERE DB_SOLINV_NUMERO = @P_NRO_SOLIC_INVEST
AND DB_SOLINV_STATUS = 0
IF ISNULL(@V_ALCADA_ATUAL, '') <> ''
BEGIN
SET @V_ALCADA_OK = 0
SELECT @V_ALCADA_OK = 1
FROM DB_ALCADA_USUARIO
WHERE DB_ALCU_ALCADA = @V_ALCADA_ATUAL
AND DB_ALCU_USUARIO = @V_CODIGO_USUARIO;
SELECT @VDB_ALCADA_LIBERA    = DB_ALCP_CODIGO,
@VDB_ALCP_GRPALCADA   = DB_ALCP_GRPALCADA,
@VDB_ALCP_VLRMAXLIB   = DB_ALCP_VLRMAXLIB,
@VDB_ALCP_DCTMAXEXC    = DB_ALCP_DCTMAXEXC
FROM DB_ALCADA_USUARIO,
DB_ALCADA_PED,
DB_USUARIO
WHERE DB_ALCU_USUARIO = CODIGO
AND DB_ALCU_ALCADA = DB_ALCP_CODIGO
AND USUARIO = @P_USUARIO
AND DB_ALCP_TIPO = 5
AND DB_ALCP_CODIGO = @V_ALCADA_ATUAL
END
END
ELSE
BEGIN
SET @V_ALCADA_OK = 1
DELETE FROM DB_SOLIC_INVESTIMENTO_ALCADA WHERE DB_SOLINV_NUMERO = @P_NRO_SOLIC_INVEST;
END
set @v_passo = 3
IF @V_ALCADA_OK <> 1
BEGIN
SET @VERRO  = 'SOLICITACAO ' + CAST(CAST(@P_NRO_SOLIC_INVEST AS BIGINT) AS VARCHAR) + ' ESTA TENTANDO SER LIBERADO POR UM USUARIO  QUE NÃO PERTENCE A ALCADA ATUAL. USUÁRIO: ' + @P_USUARIO
INSERT INTO DBS_ERROS_TRIGGERS(DBS_ERROS_DATA, DBS_ERROS_ERRO, DBS_ERROS_OBJETO)
VALUES
(GETDATE(), @VERRO, 'MERCP_LIBERACAO_SOLIC_INVEST')
END
set @v_passo = 4
IF @V_ALCADA_OK = 1
BEGIN
IF ISNULL( @P_USUARIO, '') <> ''
BEGIN
set @v_passo = 5
IF @P_ACAO = 1
BEGIN
IF @V_POR_PERCENTUAL = 0 OR ISNULL(@V_POR_PERCENTUAL, '') = ''
BEGIN
IF @VDB_ALCP_VLRMAXLIB = 0
SET @V_LIBERA_TOTAL = 1
ELSE IF @V_VALOR_SOLICITACAO <= @VDB_ALCP_VLRMAXLIB
SET @V_LIBERA_TOTAL = 1
ELSE
SET @V_LIBERA_TOTAL = 0
END
ELSE
BEGIN
IF @V_POR_PERCENTUAL = 1 AND @V_PERCENTUAL_SOLICITACAO <> 0
BEGIN
IF @VDB_ALCP_DCTMAXEXC = 0
SET @V_LIBERA_TOTAL = 1
ELSE IF @V_PERCENTUAL_SOLICITACAO <= @VDB_ALCP_DCTMAXEXC
SET @V_LIBERA_TOTAL = 1
ELSE
SET @V_LIBERA_TOTAL = 0
END
ELSE
BEGIN
SELECT @VMAIOR_PERCENTUAL_ITEM = MAX(PERCENTUAL)
FROM DB_SOLIC_INVESTIMENTO_PROD
WHERE SOLIC_INVESTIMENTO = @P_NRO_SOLIC_INVEST
IF @VDB_ALCP_DCTMAXEXC = 0
SET @V_LIBERA_TOTAL = 1
ELSE IF @VMAIOR_PERCENTUAL_ITEM <= @VDB_ALCP_DCTMAXEXC
SET @V_LIBERA_TOTAL = 1
ELSE
SET @V_LIBERA_TOTAL = 0
END
END
IF @V_LIBERA_TOTAL = 1
BEGIN
set @v_passo = 6
UPDATE DB_SOLIC_INVESTIMENTO_ALCADA
SET DB_SOLINV_STATUS = 1,
DB_SOLINV_USULIB = @V_CODIGO_USUARIO,
DB_SOLINV_DATALIB = GETDATE()
WHERE DB_SOLINV_NUMERO = @P_NRO_SOLIC_INVEST
and DB_SOLINV_ALCADA = @V_ALCADA_ATUAL
and db_solinv_seq = (SELECT MAX(DB_SOLINV_SEQ) FROM  DB_SOLIC_INVESTIMENTO_ALCADA WHERE  DB_SOLINV_NUMERO =  @P_NRO_SOLIC_INVEST )
UPDATE DB_SOLIC_INVESTIMENTO
SET SITUACAO = 1
WHERE NUMERO = @P_NRO_SOLIC_INVEST
SET @P_GRAVOU_SOLIC = 1
if ISNULL(@P_VALOR_INVEST_ORIGINAL, '') <> '' and @P_VALOR_INVEST_ORIGINAL <> 0 AND ROUND(@V_VALOR_SOLICITACAO, 2) <> ROUND(@P_VALOR_INVEST_ORIGINAL, 2)
BEGIN
SET @V_MENSAGEM_TEMP = '<ValorInvestimentoSolic>' + CAST(ISNULL(cast( ROUND(@P_VALOR_INVEST_ORIGINAL ,2) as money), '') AS VARCHAR) + '<ValorInvestimentoSolic>';
EXEC MERCP_WORKFLOW 139,
@V_CLIENTE,
@P_NRO_SOLIC_INVEST,
NULL,
NULL,
NULL,
NULL,
NULL,
@V_USUARIO_TEMP,
@V_MENSAGEM_TEMP,
1;
END
END
ELSE
BEGIN
set @v_passo = 7
BEGIN
DECLARE C	CURSOR
FOR SELECT DB_ALCP_CODIGO
FROM DB_ALCADA_PED
WHERE DB_ALCP_CODIGO IN (SELECT DB_ALCP_CODIGO
FROM DB_ALCADA_PED
WHERE DBO.MERCF_VALIDA_LISTA(@V_REPRES,	 DB_ALCP_LSTREP,    0, ',') > 0
AND ((SELECT TOP 1 1
FROM DB_SOLIC_INVESTIMENTO, DB_SOLIC_INVESTIMENTO_MOTIVO
WHERE SOLIC_INVESTIMENTO = NUMERO
AND NUMERO = @P_NRO_SOLIC_INVEST
AND DBO.MERCF_VALIDA_LISTA(MOTIVO,	 DB_ALCP_LSTMOTINVEST,    0, ',') > 0) = 1 OR (SELECT TOP 1 1
FROM DB_SOLIC_INVESTIMENTO, DB_SOLIC_INVESTIMENTO_MOTIVO
WHERE SOLIC_INVESTIMENTO = NUMERO AND NUMERO = @P_NRO_SOLIC_INVEST) IS NULL)
AND (DB_ALCP_GRPALCADA = @V_ALCP_GRPALCADA_ANTERIOR OR ISNULL(@V_ALCP_GRPALCADA_ANTERIOR, '') = '')
AND DB_ALCP_CODIGO NOT IN( SELECT DB_ALCP_CODIGO
FROM DB_ALCADA_PED A, DB_SOLIC_INVESTIMENTO_ALCADA B
WHERE DB_ALCP_CODIGO = DB_SOLINV_ALCADA
AND DB_SOLINV_NUMERO = @P_NRO_SOLIC_INVEST)
AND DB_ALCP_TIPO = 5
)
ORDER BY DB_ALCP_GRPALCADA, DB_ALCP_GRUPOLIB, DB_ALCP_NIVELLIB
OPEN C
FETCH NEXT FROM C
INTO @V_ALCP_CODIGO_TEMP
BEGIN
IF @VDB_ALCP_CODIGO IS NULL
SET @VDB_ALCP_CODIGO = @V_ALCP_CODIGO_TEMP;
END
FETCH NEXT FROM C
INTO @V_ALCP_CODIGO_TEMP
CLOSE C
DEALLOCATE C
END
IF ISNULL(@VDB_ALCP_CODIGO, '') <> ''
BEGIN
set @v_passo = 8
UPDATE DB_SOLIC_INVESTIMENTO_ALCADA
SET DB_SOLINV_STATUS = 2,
DB_SOLINV_USULIB = @V_CODIGO_USUARIO,
DB_SOLINV_DATALIB = GETDATE()
WHERE DB_SOLINV_NUMERO = @P_NRO_SOLIC_INVEST
and DB_SOLINV_ALCADA = @V_ALCADA_ATUAL
and db_solinv_seq = (SELECT MAX(DB_SOLINV_SEQ) FROM  DB_SOLIC_INVESTIMENTO_ALCADA WHERE  DB_SOLINV_NUMERO =  @P_NRO_SOLIC_INVEST )
INSERT INTO DB_SOLIC_INVESTIMENTO_ALCADA
(DB_SOLINV_NUMERO
,DB_SOLINV_SEQ
,DB_SOLINV_ALCADA
,DB_SOLINV_USULIB
,DB_SOLINV_STATUS)
VALUES
(@P_NRO_SOLIC_INVEST,
(SELECT ISNULL(MAX(DB_SOLINV_SEQ), 0) + 1 FROM  DB_SOLIC_INVESTIMENTO_ALCADA WHERE  DB_SOLINV_NUMERO =  @P_NRO_SOLIC_INVEST ),
@VDB_ALCP_CODIGO,
NULL,
0)
SET @P_GRAVOU_SOLIC = 1
if ISNULL(@P_VALOR_INVEST_ORIGINAL, '') <> '' and @P_VALOR_INVEST_ORIGINAL <> 0 AND ROUND(@V_VALOR_SOLICITACAO, 2) <> ROUND(@P_VALOR_INVEST_ORIGINAL, 2)
BEGIN
SET @V_MENSAGEM_TEMP = '<ValorInvestimentoSolic>' + CAST(ISNULL(cast( ROUND(@P_VALOR_INVEST_ORIGINAL ,2) as money), '') AS VARCHAR) + '<ValorInvestimentoSolic>';
EXEC MERCP_WORKFLOW 139,
@V_CLIENTE,
@P_NRO_SOLIC_INVEST,
NULL,
NULL,
NULL,
NULL,
NULL,
@V_USUARIO_TEMP,
@V_MENSAGEM_TEMP,
1;
END
END
ELSE
BEGIN
set @v_passo = 9
INSERT INTO DBS_ERROS_TRIGGERS
(DBS_ERROS_OBJETO, DBS_ERROS_ERRO, DBS_ERROS_DATA)
VALUES
('MERCP_LIBERACAO_SOLIC_INVEST',
'NAO FOI ENCONTRADA UMA ALÇADA PARA A SOLICITACAO DE INVESTIMENTO = ' +  cast(@P_NRO_SOLIC_INVEST as varchar) + '. USUARIO: ' + @P_USUARIO,
GETDATE())
END
END
END
ELSE
BEGIN
set @v_passo = 10
UPDATE DB_SOLIC_INVESTIMENTO_ALCADA
SET DB_SOLINV_STATUS = 1,
DB_SOLINV_USULIB = @V_CODIGO_USUARIO,
DB_SOLINV_DATALIB = GETDATE()
WHERE DB_SOLINV_NUMERO = @P_NRO_SOLIC_INVEST
and DB_SOLINV_ALCADA = @V_ALCADA_ATUAL
and db_solinv_seq = (SELECT MAX(DB_SOLINV_SEQ) FROM  DB_SOLIC_INVESTIMENTO_ALCADA WHERE  DB_SOLINV_NUMERO =  @P_NRO_SOLIC_INVEST )
SELECT @V_NUMERO_PEDIDO_TEMP = PEDIDO
FROM DB_SOLIC_INVESTIMENTO
WHERE NUMERO = @P_NRO_SOLIC_INVEST
UPDATE DB_SOLIC_INVESTIMENTO
SET SITUACAO = 2,
OBSERVACAO = OBSERVACAO + ' Solicitação não autorizada. Pedido original: ' + ISNULL(CAST(@V_NUMERO_PEDIDO_TEMP AS VARCHAR), ''),
PEDIDO = 0
WHERE NUMERO = @P_NRO_SOLIC_INVEST
UPDATE DB_PEDIDO_MOTIVO_INVESTIMENTO
SET SOLICITACAO_INVESTIMENTO = 0,
MOTIVO_INVESTIMENTO = 0
WHERE PEDIDO = @V_NUMERO_PEDIDO_TEMP
AND SOLICITACAO_INVESTIMENTO = @P_NRO_SOLIC_INVEST
SET @P_GRAVOU_SOLIC = 1
END
END
ELSE
BEGIN
set @v_passo = 11
SET @V_ALCP_GRPALCADA_ANTERIOR = NULL;
SET @V_ALCP_CODIGO_ANTERIOR    = NULL;
SELECT @V_ALCP_GRPALCADA_ANTERIOR  = DB_ALCP_GRPALCADA,
@V_ALCP_CODIGO_ANTERIOR     = MAX(DB_ALCP_CODIGO)
FROM DB_ALCADA_PED A, DB_SOLIC_INVESTIMENTO_ALCADA
WHERE DB_ALCP_CODIGO = DB_SOLINV_ALCADA
AND DB_SOLINV_NUMERO = @P_NRO_SOLIC_INVEST
GROUP BY DB_ALCP_GRPALCADA
BEGIN
DECLARE C	CURSOR
FOR SELECT DB_ALCP_CODIGO
FROM DB_ALCADA_PED
WHERE DB_ALCP_CODIGO IN (SELECT DB_ALCP_CODIGO
FROM DB_ALCADA_PED
WHERE DBO.MERCF_VALIDA_LISTA(@V_REPRES,	 DB_ALCP_LSTREP,    0, ',') > 0
AND ((SELECT TOP 1 1
FROM DB_SOLIC_INVESTIMENTO, DB_SOLIC_INVESTIMENTO_MOTIVO
WHERE SOLIC_INVESTIMENTO = NUMERO
AND NUMERO = @P_NRO_SOLIC_INVEST
AND DBO.MERCF_VALIDA_LISTA(MOTIVO,	 DB_ALCP_LSTMOTINVEST,    0, ',') > 0) = 1 OR (SELECT TOP 1 1
FROM DB_SOLIC_INVESTIMENTO, DB_SOLIC_INVESTIMENTO_MOTIVO
WHERE SOLIC_INVESTIMENTO = NUMERO AND NUMERO = @P_NRO_SOLIC_INVEST) IS NULL)
AND (DB_ALCP_GRPALCADA = @V_ALCP_GRPALCADA_ANTERIOR OR ISNULL(@V_ALCP_GRPALCADA_ANTERIOR, '') = '')
AND DB_ALCP_CODIGO NOT IN( SELECT DB_ALCP_CODIGO
FROM DB_ALCADA_PED A, DB_SOLIC_INVESTIMENTO_ALCADA B
WHERE DB_ALCP_CODIGO = DB_SOLINV_ALCADA
AND DB_SOLINV_NUMERO = @P_NRO_SOLIC_INVEST)
AND DB_ALCP_TIPO = 5
)
ORDER BY DB_ALCP_GRPALCADA, DB_ALCP_GRUPOLIB, DB_ALCP_NIVELLIB
OPEN C
FETCH NEXT FROM C
INTO @V_ALCP_CODIGO_TEMP
BEGIN
IF @VDB_ALCP_CODIGO IS NULL
SET @VDB_ALCP_CODIGO = @V_ALCP_CODIGO_TEMP;
END
FETCH NEXT FROM C
INTO @V_ALCP_CODIGO_TEMP
CLOSE C
DEALLOCATE C
END
IF ISNULL(@VDB_ALCP_CODIGO, '') <> ''
BEGIN
set @v_passo = 12
INSERT INTO DB_SOLIC_INVESTIMENTO_ALCADA
(DB_SOLINV_NUMERO
,DB_SOLINV_SEQ
,DB_SOLINV_ALCADA
,DB_SOLINV_USULIB
,DB_SOLINV_STATUS)
VALUES
(@P_NRO_SOLIC_INVEST,
(SELECT ISNULL(MAX(DB_SOLINV_SEQ), 0) + 1 FROM  DB_SOLIC_INVESTIMENTO_ALCADA WHERE  DB_SOLINV_NUMERO =  @P_NRO_SOLIC_INVEST ),
@VDB_ALCP_CODIGO,
NULL,
0)
SET @P_GRAVOU_SOLIC = 1
UPDATE DB_SOLIC_INVESTIMENTO
SET SITUACAO = 0
WHERE NUMERO = @P_NRO_SOLIC_INVEST
if ISNULL(@P_VALOR_INVEST_ORIGINAL, '') <> '' and @P_VALOR_INVEST_ORIGINAL <> 0 AND ROUND(@V_VALOR_SOLICITACAO, 2) <> ROUND(@P_VALOR_INVEST_ORIGINAL, 2)
BEGIN
SET @V_MENSAGEM_TEMP = '<ValorInvestimentoSolic>' + CAST(ISNULL(cast( ROUND(@P_VALOR_INVEST_ORIGINAL ,2) as money), '') AS VARCHAR) + '<ValorInvestimentoSolic>';
EXEC MERCP_WORKFLOW 139,
@V_CLIENTE,
@P_NRO_SOLIC_INVEST,
NULL,
NULL,
NULL,
NULL,
NULL,
@V_USUARIO_TEMP,
@V_MENSAGEM_TEMP,
1;
END
END
ELSE
BEGIN
set @v_passo = 13
INSERT INTO DBS_ERROS_TRIGGERS (DBS_ERROS_OBJETO, DBS_ERROS_ERRO, DBS_ERROS_DATA)
VALUES
('MERCP_LIBERACAO_SOLIC_INVEST',
'NAO FOI ENCONTRADA UMA ALÇADA PARA A SOLICITACAO DE INVESTIMENTO ' + cast(@P_NRO_SOLIC_INVEST as varchar) + ', USUARIO: ' + @P_USUARIO,
GETDATE())
END
END
END
END TRY
BEGIN CATCH
set @v_erro = 'ERRO: ' + ERROR_MESSAGE() + ' , LINHA: ' + CAST(ISNULL(ERROR_LINE(), 0) AS VARCHAR) + @P_USUARIO + ' : PASSO: ' + CAST(@v_passo AS VARCHAR) + ' - Solic: ' + cast(@P_NRO_SOLIC_INVEST as varchar)
INSERT INTO DBS_ERROS_TRIGGERS (DBS_ERROS_OBJETO, DBS_ERROS_ERRO, DBS_ERROS_DATA)
VALUES
('MERCP_LIBERACAO_SOLIC_INVEST', isnull(@v_erro, 'null') + cast(@v_passo as varchar), GETDATE())
END CATCH
END
GO
