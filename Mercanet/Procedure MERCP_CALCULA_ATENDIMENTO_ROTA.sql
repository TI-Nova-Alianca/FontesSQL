SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[MERCP_CALCULA_ATENDIMENTO_ROTA] ( @P_DIAS_INICIO   FLOAT = 0
, @P_CODIGO_ROTA   FLOAT = 0) AS
DECLARE  @VOBJETO                         VARCHAR(1000) = 'MERCP_CALCULA_ATENDIMENTO_ROTA';
DECLARE  @VERRO                           VARCHAR(1000);
declare @V_ACAO_NUMERODIASACOES           VARCHAR(5),
@V_USUARIO                        VARCHAR(20),
@V_DB_ROTA_CODIGO                 FLOAT,
@V_DB_ROTA_DATAI                  DATETIME,
@V_DB_ROTA_DATAF                  DATETIME,
@V_DB_ROTA_DURACAO                INT,
@V_DB_ROTAL_DIA                   SMALLINT,
@V_DB_ROTAL_INICIO                SMALLINT,
@V_DB_ROTAL_FREQ                  SMALLINT,
@V_DB_ROTAL_FREQ_NOTNULL          SMALLINT,
@V_DATA                           DATETIME,
@V_DATA_INICIAL                   DATETIME,
@V_DATA_MAX                       DATETIME,
@V_DIASEMANA	                  INT,
@V_NUMERO_DIAS_ADD                INT;
SET NOCOUNT ON;
BEGIN TRY
set @P_DIAS_INICIO = ISNULL(@P_DIAS_INICIO, 0)
set @P_CODIGO_ROTA = ISNULL(@P_CODIGO_ROTA, 0)
select @V_ACAO_NUMERODIASACOES = DB_PRMS_VALOR
, @V_DATA_MAX = CONVERT(DATE, GETDATE() + cast(DB_PRMS_VALOR as numeric) + cast(@P_DIAS_INICIO as numeric), 103)
from DB_PARAM_SISTEMA
where DB_PARAM_SISTEMA.DB_PRMS_ID = 'ACAO_NUMERODIASACOES'
DELETE DB_ROTAS_CLIENTES
WHERE DATA     >= CONVERT(DATE, GETDATE()  + cast(@P_DIAS_INICIO as numeric), 103)
AND (ROTA      = @P_CODIGO_ROTA or @P_CODIGO_ROTA = 0)
AND (isnull(DB_ROTAS_CLIENTES.MANUAL, 0) <> 1 AND isnull(DB_ROTAS_CLIENTES.EXCLUIDO, 0) <> 1);
DECLARE CUR_ROTAS CURSOR
FOR SELECT USU.USUARIO
, ROTA.DB_ROTA_CODIGO
, ROTA.DB_ROTA_DATAI
, ROTA.DB_ROTA_DATAF
, ROTA.DB_ROTA_DURACAO
, ROTAL.DB_ROTAL_DIA
, ROTAL.DB_ROTAL_INICIO
, ROTAL.DB_ROTAL_FREQ
, case isnull(DB_ROTAL_FREQ, 0) when 0 then 1
else DB_ROTAL_FREQ
end
FROM DB_ROTAS         ROTA
, DB_ROTAS_LINHAS  ROTAL
, DB_USUARIO       USU
WHERE ROTA.DB_ROTA_CODIGO   = ROTAL.DB_ROTAL_CODIGO
AND ROTA.DB_ROTA_REPRES   =  USU.CODIGO_ACESSO
AND ROTA.DB_ROTA_DATAF   >= CONVERT(DATE, GETDATE(), 103)
AND (DB_ROTA_CODIGO       = @P_CODIGO_ROTA or @P_CODIGO_ROTA = 0)
GROUP BY USU.USUARIO
, ROTA.DB_ROTA_CODIGO
, ROTA.DB_ROTA_DATAI
, ROTA.DB_ROTA_DATAF
, ROTA.DB_ROTA_DURACAO
, ROTAL.DB_ROTAL_DIA
, ROTAL.DB_ROTAL_INICIO
, ROTAL.DB_ROTAL_FREQ
OPEN CUR_ROTAS
FETCH NEXT FROM CUR_ROTAS
INTO @V_USUARIO,           @V_DB_ROTA_CODIGO,      @V_DB_ROTA_DATAI,     @V_DB_ROTA_DATAF,     @V_DB_ROTA_DURACAO
, @V_DB_ROTAL_DIA,      @V_DB_ROTAL_INICIO,     @V_DB_ROTAL_FREQ,     @V_DB_ROTAL_FREQ_NOTNULL
WHILE @@FETCH_STATUS = 0
BEGIN
IF @V_DB_ROTAL_DIA = 0
BEGIN
IF @V_DB_ROTAL_INICIO = 2
SET @V_NUMERO_DIAS_ADD = 14
ELSE IF @V_DB_ROTAL_INICIO = 3
SET @V_NUMERO_DIAS_ADD = 21
ELSE IF @V_DB_ROTAL_INICIO = 4
SET @V_NUMERO_DIAS_ADD = 28
ELSE
SET @V_NUMERO_DIAS_ADD = @V_DB_ROTAL_INICIO
SET @V_DATA_INICIAL = @V_DB_ROTA_DATAI + @V_NUMERO_DIAS_ADD;
SET @V_DATA         = @V_DATA_INICIAL;
WHILE @V_DATA <= @V_DB_ROTA_DATAF
BEGIN
IF @V_DATA > @V_DB_ROTA_DATAF
OR @V_DATA > @V_DATA_MAX
BREAK
IF @V_DATA >= @V_DB_ROTA_DATAI
AND @V_DATA >= CONVERT(DATE, GETDATE()  + cast(@P_DIAS_INICIO as numeric), 103)
BEGIN
BEGIN TRY
INSERT INTO DB_ROTAS_CLIENTES (USUARIO, ROTA, CLIENTE, DATA,	SEQUENCIA, CAPTA_PEDIDOS)
(SELECT @V_USUARIO, @V_DB_ROTA_CODIGO, ROTAL.DB_ROTAL_CLIENTE, @V_DATA, ROTAL.DB_ROTAL_SEQ, ROTAL.DB_ROTAL_CAPTA_PEDIDOS
FROM DB_ROTAS         ROTA
, DB_ROTAS_LINHAS  ROTAL
WHERE ROTA.DB_ROTA_CODIGO   = ROTAL.DB_ROTAL_CODIGO
AND ROTA.DB_ROTA_CODIGO   = @V_DB_ROTA_CODIGO
AND ROTAL.DB_ROTAL_DIA    = @V_DB_ROTAL_DIA
AND ROTAL.DB_ROTAL_FREQ   = @V_DB_ROTAL_FREQ)
END TRY
BEGIN CATCH
END CATCH
END
SET @V_DATA = @V_DATA + (1 * @V_DB_ROTAL_FREQ_NOTNULL)
END
END;
ELSE
BEGIN
SET @V_DATA_INICIAL = @V_DB_ROTA_DATAI + (@V_DB_ROTAL_INICIO * 7)
SET @V_DIASEMANA = CASE @V_DB_ROTAL_DIA WHEN 7 THEN 1
WHEN 1 THEN 2
WHEN 2 THEN 3
WHEN 3 THEN 4
WHEN 4 THEN 5
WHEN 5 THEN 6
WHEN 6 THEN 7
END
While DATEPART(DW,@V_DATA_INICIAL) <> @V_DIASEMANA
Begin
Set @V_DATA_INICIAL =  dateadd (day, 1, @V_DATA_INICIAL)
End
SET @V_DATA     = @V_DATA_INICIAL;
WHILE @V_DATA <= @V_DB_ROTA_DATAF
BEGIN
IF @V_DATA > @V_DB_ROTA_DATAF
OR @V_DATA > @V_DATA_MAX
BREAK
IF @V_DATA >= @V_DB_ROTA_DATAI
AND @V_DATA >= CONVERT(DATE, GETDATE()  + cast(@P_DIAS_INICIO as numeric), 103)
BEGIN
BEGIN TRY
INSERT INTO DB_ROTAS_CLIENTES (USUARIO, ROTA, CLIENTE, DATA, SEQUENCIA, CAPTA_PEDIDOS)
(SELECT @V_USUARIO, @V_DB_ROTA_CODIGO, ROTAL.DB_ROTAL_CLIENTE, @V_DATA, ROTAL.DB_ROTAL_SEQ, ROTAL.DB_ROTAL_CAPTA_PEDIDOS
FROM DB_ROTAS         ROTA
, DB_ROTAS_LINHAS  ROTAL
WHERE ROTA.DB_ROTA_CODIGO   = ROTAL.DB_ROTAL_CODIGO
AND ROTA.DB_ROTA_CODIGO   = @V_DB_ROTA_CODIGO
AND ROTAL.DB_ROTAL_DIA    = @V_DB_ROTAL_DIA
and ROTAL.DB_ROTAL_INICIO = @V_DB_ROTAL_INICIO
AND ROTAL.DB_ROTAL_FREQ   = @V_DB_ROTAL_FREQ									  )
END TRY
BEGIN CATCH
END CATCH
END
SET @V_DATA = @V_DATA + (7 * @V_DB_ROTAL_FREQ_NOTNULL)
END
END
FETCH NEXT FROM CUR_ROTAS
INTO @V_USUARIO,           @V_DB_ROTA_CODIGO,      @V_DB_ROTA_DATAI,     @V_DB_ROTA_DATAF,     @V_DB_ROTA_DURACAO
, @V_DB_ROTAL_DIA,      @V_DB_ROTAL_INICIO,     @V_DB_ROTAL_FREQ,     @V_DB_ROTAL_FREQ_NOTNULL
END
CLOSE CUR_ROTAS
DEALLOCATE CUR_ROTAS
END TRY
BEGIN CATCH
set @VERRO  = cast(ERROR_NUMBER() as varchar) + ERROR_MESSAGE()
SET @VERRO = @VERRO;
INSERT INTO DBS_ERROS_TRIGGERS (DBS_ERROS_ERRO, DBS_ERROS_DATA, DBS_ERROS_OBJETO)
VALUES (substring(@VERRO, 1, 200), getdate(), @VOBJETO);
END CATCH
GO
