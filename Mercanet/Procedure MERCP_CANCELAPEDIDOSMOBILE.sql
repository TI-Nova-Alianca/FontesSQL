SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER  PROCEDURE [dbo].[MERCP_CANCELAPEDIDOSMOBILE] (@P_USUARIO       VARCHAR(100),
@P_NROPEDIDO     INT,
@P_MOTIVOCANCEL  VARCHAR(6),
@P_RETORNO       INT OUT,
@P_OBERVACAO     varchar(255) = null) AS
BEGIN
DECLARE @V_PERMITE_CALCEL				INT;
DECLARE @V_DB_PED_DATA_ENVIO			DATE;
DECLARE @V_PERMITECANCELARENVIADOS		INT;
DECLARE @V_SIT_CORP						INT;
DECLARE @V_EXISTE_QTDE_ATENDIDA			INT;
DECLARE @V_ITEN_SITUACAO_UPDATE			INT;
DECLARE @verro							VARCHAR(254);
DECLARE @V_QUANTIDADE_CANCELADA			REAL;
DECLARE @VDB_PEDI_SEQUENCIA				INT;
DECLARE @VDB_PEDI_QTDE_SOLIC			REAL;
DECLARE @VDB_PEDI_QTDE_ATEND			REAL;
DECLARE @VDB_PEDI_QTDE_CANC				REAL
DECLARE @VDB_PEDI_SITUACAO				INT;
DECLARE @V_DB_PED_SITCORP               VARCHAR(50);
BEGIN TRY
SET @P_RETORNO = 0
SET @V_PERMITE_CALCEL = 0
SELECT @V_PERMITE_CALCEL = 1,
@V_DB_PED_SITCORP = DB_PED_SITCORP
FROM DB_PEDIDO, DB_PEDIDO_COMPL
WHERE DB_PED_NRO = DB_PEDC_NRO
AND DB_PED_NRO = @P_NROPEDIDO
AND DB_PED_SITUACAO <> 9
AND DB_PED_SITUACAO <> 4
AND ISNULL(DB_PEDC_EMNEGOCIACAO, 0) <> 2;
IF @V_PERMITE_CALCEL = 0
BEGIN
SET @P_RETORNO =0;
RETURN;
END
IF ISNULL(@V_DB_PED_SITCORP, '') <> ''
BEGIN
SET @V_SIT_CORP = 0;
SELECT @V_SIT_CORP = isnull(DB_TBPSC_CANCELA, 0)
FROM DB_TB_PED_SITCORP
WHERE DB_TBPSC_CODIGO = @V_DB_PED_SITCORP
IF @V_SIT_CORP = 0
BEGIN
SET @P_RETORNO = 0;
RETURN;
END
END
DECLARE C_ITENS CURSOR
FOR SELECT DB_PEDI_SEQUENCIA, DB_PEDI_QTDE_SOLIC, DB_PEDI_QTDE_ATEND , DB_PEDI_QTDE_CANC, DB_PEDI_SITUACAO
FROM DB_PEDIDO_PROD
WHERE DB_PEDI_PEDIDO = @P_NROPEDIDO
OPEN C_ITENS
FETCH NEXT FROM C_ITENS
INTO @VDB_PEDI_SEQUENCIA, @VDB_PEDI_QTDE_SOLIC, @VDB_PEDI_QTDE_ATEND , @VDB_PEDI_QTDE_CANC, @VDB_PEDI_SITUACAO
WHILE @@FETCH_STATUS = 0
BEGIN
SET @V_ITEN_SITUACAO_UPDATE = @VDB_PEDI_SITUACAO;
SET @V_QUANTIDADE_CANCELADA = @VDB_PEDI_QTDE_CANC;
IF @VDB_PEDI_QTDE_ATEND > 0
BEGIN
SET @V_EXISTE_QTDE_ATENDIDA = 1;
END
IF (@VDB_PEDI_QTDE_SOLIC - @VDB_PEDI_QTDE_ATEND) > 0
BEGIN
SET @V_QUANTIDADE_CANCELADA = @VDB_PEDI_QTDE_SOLIC - @VDB_PEDI_QTDE_ATEND
END
IF @VDB_PEDI_QTDE_SOLIC = @V_QUANTIDADE_CANCELADA
BEGIN
SET @V_ITEN_SITUACAO_UPDATE = 9;
END
ELSE IF (@VDB_PEDI_QTDE_SOLIC - @V_QUANTIDADE_CANCELADA - @VDB_PEDI_QTDE_ATEND <= 0) AND @VDB_PEDI_QTDE_ATEND > 0
BEGIN
SET @V_ITEN_SITUACAO_UPDATE = 2;
END
IF (@VDB_PEDI_QTDE_SOLIC - @VDB_PEDI_QTDE_ATEND) > 0
BEGIN
UPDATE DB_PEDIDO_PROD
SET DB_PEDI_QTDE_CANC = @V_QUANTIDADE_CANCELADA
, DB_PEDI_MOTCANC = @P_MOTIVOCANCEL
, DB_PEDI_SITUACAO = @V_ITEN_SITUACAO_UPDATE
, DB_PEDI_USU_CANC = @P_USUARIO
, DB_PEDI_ATD_DATA2 = CAST(GETDATE() AS DATE)
WHERE DB_PEDI_PEDIDO = @P_NROPEDIDO
AND DB_PEDI_SEQUENCIA = @VDB_PEDI_SEQUENCIA;
END
ELSE
BEGIN
UPDATE DB_PEDIDO_PROD
SET DB_PEDI_SITUACAO = @V_ITEN_SITUACAO_UPDATE
WHERE DB_PEDI_PEDIDO = @P_NROPEDIDO
AND DB_PEDI_SEQUENCIA = @VDB_PEDI_SEQUENCIA;
END
FETCH NEXT FROM C_ITENS
INTO @VDB_PEDI_SEQUENCIA, @VDB_PEDI_QTDE_SOLIC, @VDB_PEDI_QTDE_ATEND , @VDB_PEDI_QTDE_CANC, @VDB_PEDI_SITUACAO
END
CLOSE C_ITENS
DEALLOCATE C_ITENS
IF @V_EXISTE_QTDE_ATENDIDA = 1
BEGIN
UPDATE DB_PEDIDO
SET DB_PED_SITUACAO = 4
WHERE DB_PED_NRO = @P_NROPEDIDO
END
ELSE
BEGIN
UPDATE DB_PEDIDO
SET DB_PED_SITUACAO = 9
WHERE DB_PED_NRO = @P_NROPEDIDO;
END
UPDATE DB_PEDIDO
SET DB_PED_OBSERV = @P_OBERVACAO
WHERE DB_PED_NRO = @P_NROPEDIDO;
SET @P_RETORNO = 1
END TRY
BEGIN CATCH
INSERT INTO DBS_ERROS_TRIGGERS (DBS_ERROS_OBJETO, DBS_ERROS_ERRO, DBS_ERROS_DATA)
VALUES
('MERCP_CANCELAPEDIDOSMOBILE', 'ERRO: ' + ERROR_MESSAGE() + @P_USUARIO, GETDATE())
END CATCH
END
GO
