-- Descricao: Script usado para a criacao de alguns indices e outros procedimentos para melhoria do banco de dados.
-- Autor:     Robert Koch
-- Data:      07/01/2011
--
-- A T E N C A O: Muita coisa que tem aqui nao eh mais usada. NAO APLICAR tudo de uma vez. Analisar cada caso!
--
-- Historico de alteracoes:
-- 12/04/2022 - Robert - Criados indice por saida_id na tabela tb_wms_pedidos (GLPI 11905)
-- 21/04/2022 - Robert - Criado indice na tabela tb_wms_movimentacoes
-- 09/05/2022 - Robert - Criado indice tb_wms_lotes_item_lote
--


--SET NOCOUNT ON;

/*
-- Cria trigger para atualizar campo padrao SL1 conforme preenchimento de campo customizado.
CREATE TRIGGER VA_TRG_SL1010
ON SL1010
FOR  INSERT, UPDATE
AS
	UPDATE SL1
	SET    SL1.L1_CGCCLI = SL1.L1_VACGC
	FROM SL1010 SL1, INSERTED I
	WHERE SL1.R_E_C_N_O_ = I.R_E_C_N_O_
GO
*/

/*
-- Cria trigger para atualizar campo do SC2 conforme movimentacoes do SD3.
CREATE TRIGGER VA_TRG_SD3010
ON SD3010
FOR  INSERT, UPDATE, DELETE
AS
	-- MONTA TABELA TEMPORARIA COM FILIAIS E OPS ENVOLVIDAS NESTA ATUALIZACAO DO SD3.
	SELECT * INTO #OP
	FROM   (
	           SELECT DISTINCT D3_FILIAL,
	                  D3_OP
	           FROM   INSERTED
	           UNION
	           SELECT DISTINCT D3_FILIAL,
	                  D3_OP
	           FROM   DELETED
	       ) AS SUB1
	
	-- ATUALIZA SC2 PARA AS OPS ENVOLVIDAS.
	UPDATE SC2
	SET    C2_VATIPO = dbo.VA_TIPO_OP (C2_FILIAL, C2_NUM + C2_ITEM + C2_SEQUEN + C2_ITEMGRD)
	FROM   SC2010 SC2,
	       #OP
	WHERE  C2_FILIAL = #OP.D3_FILIAL
	       AND C2_NUM + C2_ITEM + C2_SEQUEN + C2_ITEMGRD = #OP.D3_OP
GO
*/

/*
-- Cria trigger para atualizar o nome do associado em tabelas relacionadas.
CREATE TRIGGER VA_TRG_SA2010 ON SA2010 FOR INSERT, UPDATE
AS
	DECLARE @RC AS INT;
	DECLARE @TAMANHO AS INT;	
	SET @RC = @@ROWCOUNT;
	IF @RC = 0 RETURN;
	IF NOT UPDATE (A2_NOME) RETURN;
	
	-- ATUALIZA TABELA SZI
	SET @TAMANHO = (
	        SELECT CHARACTER_MAXIMUM_LENGTH
	        FROM   INFORMATION_SCHEMA.COLUMNS
	        WHERE  TABLE_NAME = 'SZI010'
	               AND COLUMN_NAME = 'ZI_NOMASSO'
	    );
	BEGIN TRAN;
	UPDATE SZI
	SET    ZI_NOMASSO = SUBSTRING(A2_NOME, 1, @TAMANHO)
	FROM   SZI010 SZI,
	       INSERTED I
	WHERE  SZI.ZI_ASSOC = I.A2_COD
	       AND SZI.ZI_LOJASSO = I.A2_LOJA;
	COMMIT;

	-- ATUALIZA TABELA SZ8
	SET @TAMANHO = (
	        SELECT CHARACTER_MAXIMUM_LENGTH
	        FROM   INFORMATION_SCHEMA.COLUMNS
	        WHERE  TABLE_NAME = 'SZ8010'
	               AND COLUMN_NAME = 'Z8_NOMEPAT'
	    );
	BEGIN TRAN;
	UPDATE SZ8
	SET    Z8_NOMEPAT = SUBSTRING(I.A2_NOME, 1, @TAMANHO)
	FROM   SZ8010 SZ8,
	       INSERTED I
	WHERE  SZ8.Z8_CODPAT = I.A2_COD
	       AND SZ8.Z8_LOJAPAT = I.A2_LOJA;
	SET @TAMANHO = (
	        SELECT CHARACTER_MAXIMUM_LENGTH
	        FROM   INFORMATION_SCHEMA.COLUMNS
	        WHERE  TABLE_NAME = 'SZ8010'
	               AND COLUMN_NAME = 'Z8_NOMEREL'
	    );
	UPDATE SZ8
	SET    Z8_NOMEREL = SUBSTRING(I.A2_NOME, 1, @TAMANHO)
	FROM   SZ8010 SZ8,
	       INSERTED I
	WHERE  SZ8.Z8_CODREL = I.A2_COD
	       AND SZ8.Z8_LOJAREL = I.A2_LOJA;
	COMMIT;
GO
*/


-- Cria indice para auxiliar na parte de notas de devolucao.
-- CREATE NONCLUSTERED INDEX SD2010_NFORI ON SD2010 (D2_FILIAL, D2_NFORI, D2_SERIORI, D2_ITEMORI) INCLUDE (D_E_L_E_T_, D2_CLIENTE, D2_LOJA, D2_TIPO, D2_COD, D2_QUANT);


-- Cria indice para auxiliar na leitura de processos batch pendentes.
-- CREATE NONCLUSTERED INDEX ZZ6010_RODADO ON ZZ6010 (ZZ6_FILIAL, ZZ6_DTINI, ZZ6_HRINI, ZZ6_HRFIM, ZZ6_EMPDES, ZZ6_FILDES) 


-- Cria tabela para importar XML daas NF de entrada (ACABOU SENDO SUBSTITUIDO PELA TABELA 'ZZX' COM CAMPOS MEMO)
/*
CREATE TABLE VA_XML_NFE
(
  EMPRESA  VARCHAR (2)   DEFAULT '' NOT NULL,
  FILIAL   VARCHAR (2)   DEFAULT '' NOT NULL,
  CLIFOR   VARCHAR (6)   DEFAULT '' NOT NULL,
  LOJA     VARCHAR (2)   DEFAULT '' NOT NULL,
  DOC      VARCHAR (9)   DEFAULT '' NOT NULL,
  SERIE    VARCHAR (3)   DEFAULT '' NOT NULL,
  TIPONF   VARCHAR (1)   DEFAULT '' NOT NULL,
  ARQUIVO  VARCHAR (100) DEFAULT '' NOT NULL,
  USRIMP   VARCHAR (15)  DEFAULT '' NOT NULL,
  USRLIB   VARCHAR (15)  DEFAULT '' NOT NULL,
  DTIMPORT VARCHAR (8)   DEFAULT '' NOT NULL,
  DTLIBER  VARCHAR (8)   DEFAULT '' NOT NULL,
  DADOS    XML           DEFAULT '' NOT NULL
);
CREATE UNIQUE NONCLUSTERED INDEX VA_XML_NFE_1 ON VA_XML_NFE (EMPRESA, FILIAL, CLIFOR, LOJA, DOC, SERIE);
*/




-- Cria tabela para estatisticas de uso do sistema.
/*
create TABLE VA_ESTAT_USO
(
  DATA         VARCHAR (8)   DEFAULT '' NOT NULL,
  THREADID     INT           DEFAULT 0  NOT NULL,
  ROTINA       VARCHAR (50)  DEFAULT '' NOT NULL,
  USUARIO      VARCHAR (15)  DEFAULT '' NOT NULL,
  AMBIENTE     VARCHAR (20)  DEFAULT '' NOT NULL,
  HR_CONEXAO   VARCHAR (24)  DEFAULT '' NOT NULL,
  TEMPO_ATIV   VARCHAR (8)   DEFAULT '' NOT NULL,
);
CREATE UNIQUE NONCLUSTERED INDEX VA_ESTAT_USO_1 ON VA_ESTAT_USO (DATA, THREADID);
*/

-- Cria indices para a tabela VA_FAT
/*
CREATE NONCLUSTERED INDEX VA_FAT2_1 ON VA_FAT2 (EMISSAO,EMPRESA,FILIAL,ORIGEM)
CREATE NONCLUSTERED INDEX VA_FAT2_2 ON VA_FAT2 (EMPRESA,FILIAL,EMISSAO,ORIGEM)
CREATE NONCLUSTERED INDEX VA_FAT2_3 ON VA_FAT2 (PRODUTO,EMISSAO)
CREATE NONCLUSTERED INDEX VA_FAT2_4 ON VA_FAT2 (PRODPAI,EMISSAO)
CREATE NONCLUSTERED INDEX VA_FAT2_5 ON VA_FAT2 (EMPRESA,FILIAL,DOC,PRODUTO)
CREATE NONCLUSTERED INDEX VA_FAT2_6 ON VA_FAT2 (VEND1,VEND2,EMISSAO,EMPRESA,FILIAL,ORIGEM)
CREATE NONCLUSTERED INDEX VA_FAT2_7 ON VA_FAT2 (CLIENTE,LOJA,VEND1)
*/

/*-- Cria chave primaria na tabela VA_FAT para poder replica-la pelo SQL.
ALTER TABLE VA_FAT2 ADD 
RECNO INT IDENTITY
CONSTRAINT REG_ID_PK PRIMARY KEY
*/

/*-- Cria novas colunas na tabela VA_FAT.
ALTER TABLE VA_FAT2 ADD FRETEPALET FLOAT NOT NULL DEFAULT 0, FRETEREENT FLOAT NOT NULL DEFAULT 0
ALTER TABLE VA_FAT2 ADD DESCRIATIV VARCHAR (55) NOT NULL DEFAULT '', CANAL VARCHAR (2) NOT NULL DEFAULT '', DESCRICANAL VARCHAR (50) NOT NULL DEFAULT ''
ALTER TABLE VA_FAT2 ADD D2_VALFRE FLOAT NOT NULL DEFAULT 0
*/


-- Cria indices para auxiliar na leitura de contabilizacoes na tela de prev X realizado (va_pro.prw)
-- CREATE NONCLUSTERED INDEX CT1010_VA_PRO ON CT1010 (CT1_FILIAL, CT1_CONTA) INCLUDE (CT1_CLASSE, CT1_DESC01, D_E_L_E_T_)
-- CREATE NONCLUSTERED INDEX CT3010_VA_PRO2 ON CT3010 ([D_E_L_E_T_],[CT3_FILIAL],[CT3_CUSTO],[CT3_CONTA],[CT3_DATA]) INCLUDE ([CT3_DEBITO],[CT3_CREDIT],[CT3_TPSALD])

-- Cria indices para auxiliar na leitura do cadastro de movimentos da conta corrente de associados.
-- CREATE NONCLUSTERED INDEX ZX5010_TAB10 ON ZX5010 (ZX5_FILIAL, ZX5_TABELA, ZX5_10COD) INCLUDE (ZX5_10CAPI, ZX5_10DESC, ZX5_10DC, D_E_L_E_T_)

--Auxilia na leitura do SE5 quando solicitada leitura de mais de uma filial.
-- nao ajudou em muita coisa... CREATE NONCLUSTERED INDEX SE5010_VACHVEX ON SE5010 (E5_VACHVEX, E5_FILIAL, E5_DATA) INCLUDE (E5_TIPO, E5_TIPODOC, E5_SITUACA, D_E_L_E_T_)

-- Auxilia no relatorio de vencidos e a vencer (posicao na data) por que temos compensacao entre filiais.
-- USO ESPECIFICO PARA AUDITORIAS. INDICE NAO SERA MANTIDO. --> CREATE NONCLUSTERED INDEX SE5010_VAPOSDATA ON SE5010 (E5_PREFIXO, E5_NUMERO, E5_PARCELA, E5_TIPO, E5_CLIFOR, E5_LOJA) INCLUDE (D_E_L_E_T_)

-- Cria indices para auxiliar na leitura de pedidos X contratos de parceria.
-- CREATE NONCLUSTERED INDEX SC6010_VA_CONTRAT ON SC6010 (C6_FILIAL, C6_CONTRAT, C6_ITEMCON) INCLUDE (D_E_L_E_T_, C6_TES)


/*
-- Cria indices e tabelas para gravacao das leituras de brix durante descargas de uva
--DROP INDEX ZZA010.ZZA010_VA_CONST_BRIX
--NAO FUNCIONOU MUITO BEM --> CREATE UNIQUE NONCLUSTERED INDEX ZZA010_VA_CONST_BRIX ON ZZA010 (ZZA_FILIAL, ZZA_SAFRA , ZZA_CARGA , ZZA_PRODUT, D_E_L_E_T_)
--DROP TABLE LEITURAS_BRIX;
CREATE TABLE LEITURAS_BRIX
(
	EMPRESA  VARCHAR(2) NOT NULL DEFAULT '  ',
	FILIAL   VARCHAR(2) NOT NULL DEFAULT '  ',
	SAFRA    VARCHAR(4) NOT NULL DEFAULT '    ',
	CARGA    VARCHAR(4) NOT NULL DEFAULT '    ',
	PRODUTO  VARCHAR(15) NOT NULL DEFAULT '               ',
	HORA     VARCHAR(8) NOT NULL DEFAULT '00:00:00',
	GRAU     FLOAT NOT NULL DEFAULT 0
--	CONSTRAINT LEITURAS_BRIX_PK PRIMARY KEY CLUSTERED(EMPRESA, FILIAL, SAFRA, CARGA, PRODUTO, HORA)WITH (
--	    PAD_INDEX = OFF,
--	    STATISTICS_NORECOMPUTE = OFF,
--	    IGNORE_DUP_KEY = OFF,
--	    ALLOW_ROW_LOCKS = ON,
--	    ALLOW_PAGE_LOCKS = ON
--	),
	--NAO FUNCIONOU MUITO BEM --> CONSTRAINT CONST_ZZA FOREIGN KEY (EMPRESA, FILIAL, SAFRA, CARGA, PRODUTO, D_E_L_E_T_) REFERENCES ZZA010 (ZZA_FILIAL, ZZA_SAFRA, ZZA_CARGA, ZZA_PRODUT, D_E_L_E_T_)
)
*/

-- Cria indices para auxiliar na leitura de notas de safra.
-- este nao adudou muito... CREATE NONCLUSTERED INDEX SD1010_VA_NF_SAFRA  ON SD1010 (D1_FORNECE, D1_LOJA, D1_DTDIGIT, D1_TES, D1_FILIAL) INCLUDE (D_E_L_E_T_)
-- CREATE NONCLUSTERED INDEX SD1010_VA_NF_SAFRA2 ON SD1010 (D1_TES, D1_DTDIGIT, D1_FILIAL, D_E_L_E_T_)
-- CREATE NONCLUSTERED INDEX SZ7010_VA_NF_SAFRA  ON SZ7010 (Z7_FORNECE, Z7_LOJA, Z7_SAFRA, Z7_FILIAL, D_E_L_E_T_) INCLUDE (Z7_TIPO)

-- Cria indice para auxiliar na leitura de notas de devolucao de venda.
-- CREATE NONCLUSTERED INDEX SD1010_VA_DEVOLUCOES ON SD1010 (D1_FILIAL, D1_TIPO, D1_DTDIGIT, D1_MOTDEV, D_E_L_E_T_)

-- Cria indice para auxiliar na validacao da chave da NFe entrada.
-- CREATE NONCLUSTERED INDEX SF1010_VA_CHVNFE ON SF1010 (F1_CHVNFE) INCLUDE (D_E_L_E_T_)

-- Cria indice para auxiliar na funcao VA_DADOS_SC7.
-- CREATE NONCLUSTERED INDEX SD1010_VA_PEDIDO ON SD1010 (D1_FILIAL, D1_PEDIDO, D1_ITEMPC, D1_DTDIGIT) INCLUDE (D_E_L_E_T_)

-- Cria indice para ajudar na leitura de ultimas compras de produtos (funcao VA_ULTCOMP)
-- CREATE NONCLUSTERED INDEX SD1010_VA_ULTCOMP ON SD1010 (D1_COD, D1_DTDIGIT) INCLUDE (D_E_L_E_T_, D1_FILIAL)

-- Cria indice para auxiliar na leitura de notas relacionadas a OP.
-- CREATE NONCLUSTERED INDEX SD1010_VA_OP ON SD1010 (D1_FILIAL, D1_OP)

-- Cria indice para auxiliar na funcao VA_FFRETES_ENTRADAS e na view VA_VFAT
-- CREATE NONCLUSTERED INDEX SD1010_VA_FRETES ON SD1010 ([D_E_L_E_T_],[D1_FILIAL],[D1_COD],[D1_FORNECE],[D1_DOC],[D1_DTDIGIT]) INCLUDE ([D1_QUANT],[D1_TOTAL],[D1_TES],[D1_LOJA],[D1_SERIE],[D1_ITEM])



-- Cria indice para auxiliar na busca de placas de veiculos e NF produtor nas cargas recebidas durante a safra.
-- CREATE NONCLUSTERED INDEX SZE010_VA_ASSOC ON SZE010 (ZE_ASSOC, ZE_LOJASSO, ZE_NFPROD, ZE_SNFPROD, ZE_SAFRA, ZE_FILIAL) INCLUDE (D_E_L_E_T_, ZE_PLACA)


-- Cria indices para auxiliar nas leituras diversas do log de acessos ao Protheus
-- CREATE NONCLUSTERED INDEX VA_USOROT_ROTINA ON VA_USOROT (ROTINA, ENTRADA, NOME)


/*
-- CRIA TABELA PARA ARMAZENAMENTO DE TEXTOS EM GERAL, DESVINCULADA DA SYP(MEMOS) DO SISTEMA
CREATE TABLE VA_TEXTOS
(
	CHAVE  VARCHAR(18) NOT NULL DEFAULT '',
	D_E_L_E_T_ varchar (1) NOT NULL DEFAULT ' ',
	TEXTO  VARCHAR(MAX) NOT NULL DEFAULT '',
	CONSTRAINT [VA_TEXTOS_PK] PRIMARY KEY CLUSTERED([CHAVE] ASC)WITH (
	    PAD_INDEX = OFF,
	    STATISTICS_NORECOMPUTE = OFF,
	    IGNORE_DUP_KEY = OFF,
	    ALLOW_ROW_LOCKS = ON,
	    ALLOW_PAGE_LOCKS = ON
	) ON [PRIMARY]
)
*/

/* Cria indice especifico para relacionar titulos de origem e seus filhos (taxas e impostos) para relatorio despesas obra.
use Replica_dadosp10;
CREATE NONCLUSTERED INDEX SE2010_E2_TITPAI ON SE2010 (E2_FILIAL, E2_TITPAI) INCLUDE (D_E_L_E_T_);
*/

-- Cria indices especificos para relatorios de controle de financiamentos obra Flores da Cunha. No futuro poderao ser excluidos.
--DROP INDEX SC3010.SC3_VA_ZZG
--DROP INDEX SC7010.SC7_VA_ZZG
--DROP INDEX SD1010.SD1_VA_ZZG
--DROP INDEX SC3010.SC3_VA_ZZG2
--DROP INDEX SC7010.SC7_VA_ZZG2
--DROP INDEX SD1010.SD1_VA_ZZG2
--CREATE NONCLUSTERED INDEX SC3_VA_ZZG ON SC3010 (C3_FILIAL, C3_VAZZG, C3_VAZZGC) INCLUDE (D_E_L_E_T_);
--CREATE NONCLUSTERED INDEX SC7_VA_ZZG ON SC7010 (C7_FILIAL, C7_VAZZG, C7_VAZZGC) INCLUDE (D_E_L_E_T_);
--CREATE NONCLUSTERED INDEX SD1_VA_ZZG ON SD1010 (D1_FILIAL, D1_VAZZG, D1_VAZZGC) INCLUDE (D_E_L_E_T_);
--CREATE NONCLUSTERED INDEX SC3_VA_ZZG2 ON SC3010 (C3_FILIAL, C3_VAZZG2) INCLUDE (D_E_L_E_T_);
--CREATE NONCLUSTERED INDEX SC7_VA_ZZG2 ON SC7010 (C7_FILIAL, C7_VAZZG2) INCLUDE (D_E_L_E_T_);
--CREATE NONCLUSTERED INDEX SD1_VA_ZZG2 ON SD1010 (D1_FILIAL, D1_VAZZG2) INCLUDE (D_E_L_E_T_);


-- Cria indice especifico para buscar adiantamentos de safra para uso no leilao CONAB 2012. Deletar depois.
--CREATE NONCLUSTERED INDEX #SE5010_ADTOS_LEILAO ON SE5010 (E5_FILIAL, E5_VACHVEX, E5_SITUACA, D_E_L_E_T_, E5_BANCO)
--DROP INDEX SE5010.#SE5010_ADTOS_LEILAO




-- Cria indices para auxiliar com depositos externos e filial 04
-- Cria indice para auxiliar na pesquisa de notas de retorno simbolico do deposito para a matriz.
-- CREATE NONCLUSTERED INDEX SF2010_VANFFD ON SF2010 (D_E_L_E_T_, F2_FILIAL, F2_VANFFD, F2_SERIE, F2_TIPO, F2_CLIENTE, F2_LOJA);

-- Cria indice para auxiliar na busca de pedidos de devolucao com saldo em aberto (retornos deposito - filial 04).
-- CREATE NONCLUSTERED INDEX SC6010_VA_NF_ORI ON SC6010 (C6_FILIAL, C6_NFORI, C6_SERIORI, C6_ITEMORI, C6_CLI, C6_LOJA) INCLUDE (D_E_L_E_T_, C6_PRODUTO, C6_BLQ, C6_BLOQUEI, C6_QTDVEN, C6_QTDENT)

-- Cria indice para auxiliar na busca de saldo em aberto dos pedidos de venda.
-- CREATE NONCLUSTERED INDEX SC6010_VA_SALDO ON SC6010 (C6_FILIAL, C6_PRODUTO) INCLUDE (D_E_L_E_T_, C6_BLQ, C6_BLOQUEI, C6_QTDVEN, C6_QTDENT)

-- Cria indice para auxiliar na leitura de pendencias de movimentacoes do deposito (filial 04)
-- CREATE NONCLUSTERED INDEX SF1010_VA_ENTRDEP ON SF1010 (F1_FILIAL, F1_DTDIGIT, F1_FORNECE, F1_LOJA, F1_DOC, F1_SERIE, F1_TIPO) INCLUDE (D_E_L_E_T_)


/*
-- Recomendacao do Eduardo Candido:
CREATE NONCLUSTERED INDEX [_dta_index_SD2010_6_620879812__K2_K190_K1_K189_K23_esx] ON [dbo].[SD2010] 
(
	[D2_COD] ASC,
	[R_E_C_N_O_] ASC,
	[D2_FILIAL] ASC,
	[D_E_L_E_T_] ASC,
	[D2_EMISSAO] ASC
)WITH (SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]
CREATE STATISTICS [_dta_stat_620879812_190_1_189_esx] ON [dbo].[SD2010]([R_E_C_N_O_], [D2_FILIAL], [D_E_L_E_T_])
CREATE STATISTICS [_dta_stat_620879812_23_2_1_esx] ON [dbo].[SD2010]([D2_EMISSAO], [D2_COD], [D2_FILIAL])
CREATE STATISTICS [_dta_stat_620879812_1_2_189_23_esx] ON [dbo].[SD2010]([D2_FILIAL], [D2_COD], [D_E_L_E_T_], [D2_EMISSAO])
CREATE STATISTICS [_dta_stat_620879812_189_1_23_190_2_esx] ON [dbo].[SD2010]([D_E_L_E_T_], [D2_FILIAL], [D2_EMISSAO], [R_E_C_N_O_], [D2_COD])
CREATE STATISTICS [_dta_stat_581134107_5_2_esx] ON [dbo].[SB1010]([B1_TIPO], [B1_COD])
CREATE STATISTICS [_dta_stat_581134107_234_5_esx] ON [dbo].[SB1010]([D_E_L_E_T_], [B1_TIPO])
CREATE STATISTICS [_dta_stat_581134107_2_234_5_esx] ON [dbo].[SB1010]([B1_COD], [D_E_L_E_T_], [B1_TIPO])
*/


-- Cria indice para melhorar a performance do 'baixar' do contas a receber, que no Protheus11 comecou a pesquisar com 'charindex' e outras coisas...
-- CREATE NONCLUSTERED INDEX SE1010_VA_E1_SALDO ON SE1010 (E1_SALDO, D_E_L_E_T_)


/*
-- GERA TABELA AUXILIAR DE DATAS
CREATE TABLE VA_AUX_DIAS (DATA DATETIME NOT NULL,
DIA SMALLINT NOT NULL DEFAULT 0,
MES SMALLINT NOT NULL DEFAULT 0,
ANO SMALLINT NOT NULL DEFAULT 0,
SDATA VARCHAR (8) NOT NULL DEFAULT '',
SDIA VARCHAR (2) NOT NULL DEFAULT '',
SMES VARCHAR (2) NOT NULL DEFAULT '',
SANO VARCHAR (4) NOT NULL DEFAULT ''
)
CREATE CLUSTERED INDEX VA_AUX_DATA_DATA ON VA_AUX_DIAS (DATA);
CREATE NONCLUSTERED INDEX VA_AUX_DATA_AMD ON VA_AUX_DIAS (ANO, MES, DIA);
CREATE NONCLUSTERED INDEX VA_AUX_DATA_SDATA ON VA_AUX_DIAS (SDATA);
CREATE NONCLUSTERED INDEX VA_AUX_DATA_SAMD ON VA_AUX_DIAS (SANO, SMES, SDIA);
DECLARE @ANO SMALLINT;
DECLARE @DATA DATETIME;
SET @ANO = 1900;
WHILE (@ANO <= 2100)
BEGIN
	SET @DATA = CAST (CAST (@ANO AS VARCHAR (4)) + '0101' AS DATETIME);
	WHILE (@DATA <= CAST (CAST (@ANO AS VARCHAR (4)) + '1231' AS DATETIME))
	BEGIN
		INSERT INTO VA_AUX_DIAS (DATA, ANO, MES, DIA, SDATA, SANO, SMES, SDIA)
		   VALUES (@DATA, YEAR (@DATA), MONTH (@DATA), DAY (@DATA),
		           dbo.VA_DatetimeToVarchar (@DATA),
		           CAST (YEAR (@DATA) AS VARCHAR (4)),
		           CASE WHEN MONTH (@DATA) <= 9 THEN '0' ELSE '' END + CAST (MONTH (@DATA) AS VARCHAR (2)),
		           CASE WHEN DAY (@DATA) <= 9 THEN '0' ELSE '' END + CAST (DAY (@DATA) AS VARCHAR (2))
		   );
		SET @DATA = DATEADD (DD, 1, @DATA);
	END;
    SET @ANO = @ANO + 1;
END;
SELECT * FROM VA_AUX_DIAS

-- GERA TABELA AUXILIAR DE MESES COM BASE NA TABELA DE DIAS
--DROP TABLE VA_AUX_MESES
SELECT DISTINCT ANO, MES, SANO, SMES, SANO + SMES AS SANOMES,
       CASE MES WHEN 1 THEN 'JAN'
                WHEN 2 THEN 'FEV'
                WHEN 3 THEN 'MAR'
                WHEN 4 THEN 'ABR'
                WHEN 5 THEN 'MAI'
                WHEN 6 THEN 'JUN'
                WHEN 7 THEN 'JUL'
                WHEN 8 THEN 'AGO'
                WHEN 9 THEN 'SET'
                WHEN 10 THEN 'OUT'
                WHEN 11 THEN 'NOV'
                WHEN 12 THEN 'DEZ'
       END AS NOME_MES,
       CASE WHEN MES BETWEEN 1 AND 3 THEN 1
       ELSE
           CASE WHEN MES BETWEEN 4 AND 6 THEN 2
           ELSE
               CASE WHEN MES BETWEEN 7 AND 9 THEN 3
               ELSE
                   CASE WHEN MES BETWEEN 10 AND 12 THEN 4
                   ELSE
                       ''
                   END
               END
           END
       END AS TRIMESTRE
INTO VA_AUX_MESES
FROM VA_AUX_DIAS
ORDER BY ANO, MES
CREATE CLUSTERED INDEX VA_AUX_MESES_ANOMES ON VA_AUX_MESES (ANO, MES);
CREATE NONCLUSTERED INDEX VA_AUX_MESES_SANOMES ON VA_AUX_MESES (SANOMES);
*/

-- Cria indice para melhorar leituras de campos mais utilizados do cadastro de TES
-- CREATE NONCLUSTERED INDEX SF4010_VA_CPOS_MAIS_USADOS ON SF4010 (F4_CODIGO, D_E_L_E_T_) INCLUDE (R_E_C_N_O_, F4_ESTOQUE, F4_DUPLIC, F4_MARGEM, F4_VARDEP, F4_VAFDEP, F4_CREDICM) 


-- Cria indice para melhorar a leitura de saldos de contas do patrimonio liquido.
-- CREATE NONCLUSTERED INDEX CT7010_VA_SALDOS ON CT7010 (CT7_FILIAL, CT7_CONTA, CT7_DATA DESC, CT7_TPSALD, D_E_L_E_T_)


-- Cria indice para melhorar a leitura de chaves de NF-e (view VA_VEVENTOS_NFE)
-- CREATE NONCLUSTERED INDEX SF2010_VA_CHVNFE ON SF2010 (F2_FILIAL, F2_CHVNFE)

--este eu criei so na base WMS, vamos ver se precisa na quente
-- Cria indice para melhorar a leitura de pedidos em aberto
-- CREATE NONCLUSTERED INDEX SC9010_VA_NF ON SC9010 (C9_FILIAL, C9_NFISCAL, C9_PEDIDO)
-- DROP INDEX SC9010.SC9010_VA_NF

-- Cria indices para melhorar a performance da integracao com FullWMS
-- CREATE NONCLUSTERED INDEX SB1010_B1_VAFULLW ON SB1010 (B1_VAFULLW)
-- CREATE NONCLUSTERED INDEX SB9010_B9_DATA ON SB9010 ([B9_FILIAL],[D_E_L_E_T_]) INCLUDE ([B9_DATA])
-- CREATE NONCLUSTERED INDEX DAI010_FULLWMS ON DAI010 ([DAI_FILIAL],[D_E_L_E_T_]) INCLUDE ([DAI_COD],[DAI_SEQCAR],[DAI_PEDIDO])
-- CREATE NONCLUSTERED INDEX SC9010_FULLWMS ON SC9010 ([C9_FILIAL],[C9_NFISCAL],[C9_LOCAL],[D_E_L_E_T_]) INCLUDE ([C9_ITEM],[C9_PEDIDO],[C9_PRODUTO])


-- Cria indices para melhorar leitura da tabela tb_wms_entrada (integracao com Protheus)
-- CREATE NONCLUSTERED INDEX tb_wms_entrada_status_protheus ON tb_wms_entrada (status, status_protheus) INCLUDE ([entrada_id],[codfor],[coditem],[qtde_exec],[tpdoc],[dthr])
-- CREATE NONCLUSTERED INDEX tb_wms_entrada_entrada_id ON tb_wms_entrada (entrada_id)

-- Cria indices para melhorar leitura da tabela tb_wms_lotes (integracao com Protheus)
-- CREATE NONCLUSTERED INDEX tb_wms_lotes_doc_item  ON tb_wms_lotes (documento_id, cod_item)
-- CREATE NONCLUSTERED INDEX tb_wms_lotes_item_lote ON tb_wms_lotes (cod_item, lote)

-- Cria indices para melhorar leitura da tabela tb_wms_pedidos, usada pela view v_wms_pedido (integracao com Protheus)
-- CREATE NONCLUSTERED INDEX tb_wms_pedidos_saida_id ON tb_wms_pedidos (saida_id)

-- Cria indice para melhorar a leitura da tabela tb_wms_movimentacoes, usada pelo Protheus nas integracoes.
-- CREATE NONCLUSTERED INDEX tb_wms_movimentacoes_status_protheus ON tb_wms_movimentacoes (status_protheus, dthr)

-- Cria indices para melhorar a consulta de lctos contabeis nas 'consultas web'.
--CREATE NONCLUSTERED INDEX VA_CT2_DEBITO on CT2010 (CT2_DEBITO, CT2_CREDIT, CT2_DATA, CT2_FILIAL) INCLUDE (D_E_L_E_T_)
--CREATE NONCLUSTERED INDEX VA_CT2_CREDIT on CT2010 (CT2_CREDIT, CT2_DEBITO, CT2_DATA, CT2_FILIAL) INCLUDE (D_E_L_E_T_)

-- Cria indice para melhorar performance do job de cancelamento de NF-e
--CREATE NONCLUSTERED INDEX SF2010_VA_JOB_CANC_NFE ON SF2010 (F2_FILIAL, F2_ESPECIE, D_E_L_E_T_, F2_STATUS, F2_FIMP)

-- CRIA INDICE PARA MELHORAR BALANCETE 12 MESES DA CONSULTA WEB
-- CREATE NONCLUSTERED INDEX CQ1010_VA_BAL12MESES ON CQ1010 (CQ1_FILIAL, CQ1_CONTA, CQ1_TPSALD, D_E_L_E_T_, CQ1_DATA, CQ1_LP) INCLUDE (CQ1_DEBITO, CQ1_CREDIT)

-- Cria inicializadores para campos de data e hora de gravacao de registros.
-- ALTER TABLE SD3010 DROP CONSTRAINT SD3010_D3_VADTINC_DF; ALTER TABLE SD3010 ADD CONSTRAINT SD3010_D3_VADTINC_DF DEFAULT (CONVERT([varchar],getdate(),(112))) FOR D3_VADTINC
-- ALTER TABLE SD3010 DROP CONSTRAINT SD3010_D3_VAHRINC_DF; ALTER TABLE SD3010 ADD CONSTRAINT SD3010_D3_VAHRINC_DF DEFAULT (substring(CONVERT([varchar],getdate(),(108)),(1),(5))) FOR D3_VAHRINC
-- ALTER TABLE ZAF010 DROP CONSTRAINT ZAF010_ZAF_DTINC_DF; ALTER TABLE ZAF010 ADD CONSTRAINT ZAF010_ZAF_DTINC_DF DEFAULT (CONVERT([varchar],getdate(),(112))) FOR ZAF_DTINC
-- ALTER TABLE ZAF010 DROP CONSTRAINT ZAF010_ZAF_HRINC_DF; ALTER TABLE ZAF010 ADD CONSTRAINT ZAF010_ZAF_HRINC_DF DEFAULT (substring(CONVERT([varchar],getdate(),(108)),(1),(5))) FOR ZAF_HRINC

-- Melhoria no job MERCP_INSERE_PROD_USU, que estava massacrando o database (indice criado em 12/11/2020)
--use MercanetPRD
--CREATE NONCLUSTERED INDEX VA_IDX_PRECOP_PROD_1 ON DB_PRECO_PROD (DB_PRECOP_PRODUTO, DB_PRECOP_CODIGO, DB_PRECOP_SITUACAO, DB_PRECOP_DTVALF)
--CREATE NONCLUSTERED INDEX VA_IDX_DB_PRODUTO_1 ON DB_PRODUTO (DB_PROD_SITUACAO, DB_PROD_CODIGO)
